<?php/* * Copyright (c) 2023. * RW::Software * Dave Conley * https://www.rwscripts.com/ */require_once ROOT_PATH . "/functions/files.php";class admin_files extends files{	var $html = "";	var $output = "";	function admin_files()	{		global $IN, $OUTPUT, $std;		$this->html = $OUTPUT->load_template("skin_files");		switch ($IN["act"]) {			// Call the browse listing for the ACP			case 'edit':				$this->files_edit();				break;			case 'editcat':				$this->files_editcat();				break;			case 'deletecat':				$this->files_deletecat();				break;			case 'addcat':				$this->files_addcat();				break;			case 'ordercat':				$this->files_ordercat();				break;			case 'editdl':				$this->files_editdl();				break;			case 'deletedl':				$this->files_deletedl();				break;			case 'adddl':				$this->files_adddl();				break;			case 'deleteimg':				$this->files_deleteimg();				break;			case 'custom':			{				if ($std->isUsingFullVersion()) {					$this->customFields();				}				break;			}			case 'massupload':			{				if ($std->isUsingFullVersion()) {					$this->massUpload();				}				break;			}			case 'domassupload':			{				if ($std->isUsingFullVersion()) {					$this->doMassUpload();				}				break;			}			case 'filetype':			{				if ($std->isUsingFullVersion()) {					$this->fileTypeControl();				}				break;			}			case 'lookup':			{				if ($std->isUsingFullVersion()) {					$this->typeLookup();				}				break;			}			case 'addmime':			{				if ($std->isUsingFullVersion()) {					$this->addMimeType();				}				break;			}			case 'deltype':			{				if ($std->isUsingFullVersion()) {					$this->files_deleteft();				}				break;			}			case 'unapproved':				$this->displayUnapproved();				break;			case 'qapprove':				$this->qApprove();				break;			case 'approveSelect':				$this->checkedApprove();				break;			case 'batch':				$this->files_batch();				break;		}		$OUTPUT->add_output($this->output);	}	function files_edit()	{		global $IN, $std;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editfiles"));		// ===========================================================		//  Display downloads in category and sub category listings		// ===========================================================		if ($IN["cid"]) {			$std->updateNav("", $IN["cid"], 1);			$this->adDisplayCats($IN["cid"]);			$this->adDisplayLinks($IN["cid"]);		}		// ===========================================================		//  Display main category listing		// ===========================================================		else {			$std->updateNav("", 0, 1);			$this->adDisplayCats(0);		}		$this->output .= admin_foot();	}	// ===========================================================	//  CATEGORY FUNCTIONS	// ===========================================================	//  Add Category	//	Does exactly what it says on the tin	// ===========================================================	function files_addcat()	{		global $DB, $IN, $std, $sid;		require_once ROOT_PATH . "/engine/upload.php";		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_addcat"));		if (!empty($IN["submit"])) {			if ($IN["catname"] == '')				$std->warning(GETLANG("warn_missing"));			else {				// If new thumbnail required then upload				if ($_FILES["catthumb"]) {					$upload = new CUpload();					$upload->uploadImage("catthumb", 0, false);					if ($upload->file_name != "file.rwd")						$upload->moveImage($upload->file_name, $upload->file_name);				}				if ($std->isUsingFullVersion()) {					// Update permissions					// Get the array out of POST data					$canBrowse = $IN["canBrowse"];					$canUL = $IN["canUL"];					$canDL = $IN["canDL"];					$gID = $IN["gID"];					foreach ($gID as $idx => $val) {						if ($canBrowse[$idx])							$browse .= "|" . $val;						if ($canUL[$idx])							$ul .= "|" . $val;						if ($canDL[$idx])							$download .= "|" . $val;					}				}				$parent = $IN['parent'];				if (!$parent) $parent = 0;				$insert = array("name" => $IN["catname"],					"description" => $IN["description"],					"thumb" => $upload->masked_file,					"parentid" => $parent,					"canBrowse" => $browse,					"canUL" => $ul,					"canDL" => $download);				$DB->insert($insert, "dl_categories");				$this->output .= GETLANG("catadd") . "<br><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=addcat'>" . GETLANG("backto") . " " . GETLANG("nav_addcat") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				$this->output .= admin_foot();				$std->addAdminLog("Added category '{$IN['catname']}'");				return;			}		} else {			$function = "addcat";			$this->files_catForm("", "", "", $function);		}		$this->output .= admin_foot();	}	// ===========================================================	//  get Latest File Info	//	Recurses the directory tree to count the downloads	//	and get the latest file info	// ===========================================================	function getLatestFileInfo($categoryData)	{		global $rwdInfo, $std;		foreach ($rwdInfo->cat_cache as $subcat) {			if ($subcat['parentid'] == $categoryData['cid']) {				$tempData = $this->getLatestFileInfo($subcat);    // Recurse until at the end of the tree				//$categoryData['downloads'] += $subcat['downloads'];				$categoryData['downloads'] += $tempData['downloads'];				if ($tempData['lastDate'] > $categoryData['lastDate']) {					$categoryData['lastDate'] = $tempData['lastDate'];					$categoryData['lastid'] = $tempData['lastid'];					$categoryData['lastTitle'] = $tempData['lastTitle'];				}			}		}		return $categoryData;	}	// ===========================================================	//  Display Categories	//	Displays the list of categories in ACP format	// ===========================================================	function adDisplayCats($parent = 0)	{		global $rwdInfo, $sid, $std, $DB, $module;		if (!$std->isUsingFullVersion() and $parent != 0) {			return;		}		if (!$rwdInfo->cats_saved) {			$DB->query("SELECT * FROM dl_categories ORDER BY parentid ASC, sortorder ASC");			if ($myrow = $DB->fetch_row()) {				do {					// Add category to cache					$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;				} while ($myrow = $DB->fetch_row());			}			$rwdInfo->cats_saved = 1;		}		$result = 0;		if ($std->isUsingFullVersion()) {			$result = $DB->query("SELECT * FROM dl_categories WHERE parentid=$parent ORDER BY sortorder");		} else {			$result = $DB->query("SELECT * FROM dl_categories ORDER BY sortorder");		}		if ($myrow = $DB->fetch_row($result)) {			// Add category to cache			$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;			$this->output .= $module->html_skincall("ad_cat_head", $this->html);			do {				$catData = $this->getLatestFileInfo($myrow);				$rows = $catData["downloads"];				$id = $myrow["cid"];				if (1 /*$std->isUsingFullVersion()*/) {					$cat_name = "<a href='admin.php?sid=$sid&area=files&act=edit&cid=$id'>{$myrow['name']}</a>";				} else {					$cat_name = $myrow['name'];				}				if ($rows > 0) {					$cat_latest = "<a href='admin.php?sid=$sid&area=files&act=editdl&id={$catData['lastid']}'>{$catData['lastTitle']}</a>";				} else {					$cat_latest = GETLANG("nodls");				}				$cat_desc = $myrow["description"];				$delete = "<a href='admin.php?sid=$sid&area=files&act=deletecat&id=$id'>" . GETLANG("delete") . "</a>";				$edit = "<a href='admin.php?sid=$sid&area=files&act=editcat&id=$id'>" . GETLANG("edit") . "</a>";				$data = array(					"cat_name" => "$cat_name",					"cat_latest" => "$cat_latest",					"cat_desc" => "$cat_desc",					"cat_dlcount" => "$rows",					"cat_edit" => "$edit",					"cat_delete" => "$delete");				$this->output .= $module->html_skincall("ad_cat_row", $this->html, $data);			} while ($myrow = $DB->fetch_row($result));			$this->output .= $module->html_skincall("ad_cat_foot", $this->html);		} else {			$std->info("Sorry but there are no categories to show");		}	}	// ===========================================================	//  Delete Category	//	Displays the confirm dialog and handles the response	// ===========================================================	function files_deletecat()	{		global $IN, $DB, $sid, $std;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editfiles"));		if ($IN["confirm"]) {			if ($this->categoryDelete($IN["id"])) {				// resync the remaining categories				// Should this be WHERE parentid=$IN['id']  ?				$cats = $DB->query("SELECT * FROM dl_categories");				if ($myrow = $DB->fetch_row($cats)) {					do {						$std->resyncCats($myrow['cid']);					} while ($myrow = $DB->fetch_row($cats));				}				$this->output .= GETLANG("catdel") . "<br><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			} else {				$std->error(GETLANG("er_catdel"));				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			}		} else if ($IN["cancel"]) {			$this->output .= GETLANG("delcancel") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editcat&id=" . $IN["id"] . "'>" . GETLANG("backto") . " " . GETLANG("nav_editcat") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";		} else {			$std->warning(GETLANG("warn_catdel") . "<p>"				. "<form method='post' action='admin.php?sid=$sid&area=files&act=deletecat'>"				. "<input type='hidden' name='id' value='" . $IN[id] . "'>"				. "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>");		}		$this->output .= admin_foot();		return;	}	// ===========================================================	//  Category Delete	//	Main delete function. Recurses through all child	//	categories and removes them too when they are empty	//	What a clever little function you are...	// ===========================================================	function categoryDelete($id)	{		global $rwdInfo, $std, $DB;		$return = false;		// Remove category		$result = $DB->query("SELECT * FROM dl_categories WHERE parentid = $id");		if ($myrow = $DB->fetch_row($result)) {			$std->addAdminLog("Removed category '{$myrow['name']}");			// Add category to cache			$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;			do {				if (!$this->categoryDelete($myrow["cid"]))					$return = $this->removeCategory($myrow["cid"]);			} while ($myrow = $DB->fetch_row($result));		}		$return = $this->removeCategory($id);		return $return;	}	// ===========================================================	//  Remove Category	//	Be gone evil one!	// ===========================================================	function removeCategory($id)	{		global $rwdInfo, $sid, $CONFIG, $DB;		if ($this->categoryClear($id)) {			// Remove category			// Set category data if not already saved... which it probably should be			if (!$rwdInfo->cat_cache[$id]) {				$catres = $DB->query("SELECT * FROM dl_categories WHERE cid=$id");				$catrow = $DB->fetch_row();				$rwdInfo->cat_cache[$id] = $catrow;			}			$name = $rwdInfo->cat_cache[$id]["name"];			$file = $CONFIG['imagesfolder'] . "/" . $rwdInfo->cat_cache[$id]["thumb"];			if (is_file($file))				unlink($file);			$file = $CONFIG['imagesfolder'] . "/t_" . $rwdInfo->cat_cache[$id]["thumb"];			if (is_file($file))				unlink($file);			$result = $DB->query("DELETE FROM dl_categories WHERE cid=$id");			return true;		} else			return false;	}	// ===========================================================	//  Clear Category	//	Remove all files from category	// ===========================================================	function categoryClear($id)	{		global $DB, $CONFIG, $rwdInfo;		// Remove links from category		$result2 = $DB->query("SELECT * FROM dl_symlinks WHERE sym_catid='{$id}'");		if ($myrow2 = $DB->fetch_row($result2)) {			do {				$DB->query("DELETE FROM dl_symlinks WHERE sym_id='{$myrow2['sym_id']}'");				$res = $DB->query("SELECT sym_id FROM dl_symlinks WHERE sym_did='{$myrow2['sym_did']}'");				if ($DB->num_rows($res) == 0) {					include_once(ROOT_PATH . "/functions/gallery.php");					$gallery = new gallery();					$gallery->remove_thumbs($myrow2["sym_did"]);					$DB->query("SELECT maskName FROM dl_links WHERE did='{$myrow2['sym_did']}'");					$file = $DB->fetch_row();					$DB->query("DELETE FROM dl_links WHERE did='{$myrow2['sym_did']}'");					$DB->query("DELETE FROM dl_comments WHERE did='{$myrow2['sym_did']}'");					$file2 = $CONFIG['filesfolder'] . "/" . $file["maskName"];					if (is_file($file2))						unlink($file2);				}			} while ($myrow2 = $DB->fetch_row($result2));		}		return true;	}	// ===========================================================	//  Edit Category	//	I dont like your face	// ===========================================================	function files_editcat()	{		global $IN, $DB, $rwdInfo, $sid, $std;		require_once ROOT_PATH . "/engine/upload.php";		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editfiles"));		// Remove thumbnail		if ($IN["removethumb"]) {			$table = "dl_categories";			$sqlid = "cid=" . $IN["id"];			$type = "thumb";			if ($this->removeFile($rwdInfo->path, $table, $sqlid, $IN["id"], $type))				$this->output .= GETLANG("inf_filedl") . "<br><br>";			else				$this->output .= GETLANG("er_unlink") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editcat&id=" . $IN["id"] . "'>" . GETLANG("backto") . " " . GETLANG("nav_editcat") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Removed thumbnail from category {$IN['cid']}");			return;		}		// Data posted		if (!empty($IN["submit"])) {			// Check for required fields			if ($IN["catname"] == '') {				$std->error(GETLANG("warn_missing"));				return;			}			if (!$this->validateCat($IN["id"], $IN["parent"])) {				$std->error(GETLANG("er_movecat"));				return;			}			// If new thumbnail required then upload			if ($_FILES["catthumb"]) {				$upload = new CUpload();				$upload->uploadImage("catthumb", 0, false);				$upload->moveImage($upload->file_name, $upload->file_name);			}			// If new thumb uploaded then change database to reflect change			if ($upload->masked_file and $upload->masked_file != "file.rwd")				$result = $DB->query("UPDATE dl_categories SET thumb='$upload->masked_file' WHERE cid=$IN[id]");			// Update permissions			// Get the array out of POST data			$canBrowse = $IN["canBrowse"];			$canUL = $IN["canUL"];			$canDL = $IN["canDL"];			$gID = $IN["gID"];			foreach ($gID as $idx => $val) {				if ($canBrowse[$idx])					$browse .= "|" . $val;				if ($canUL[$idx])					$ul .= "|" . $val;				if ($canDL[$idx])					$download .= "|" . $val;			}			$result = $DB->query("UPDATE dl_categories SET canBrowse='$browse', canUL='$ul', canDL='$download', name='$IN[catname]', parentid='$IN[parent]', description='$IN[description]' WHERE cid=$IN[id]");			$this->output .= GETLANG("catedit") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editcat&id=" . $IN["id"] . "'>" . GETLANG("backto") . " " . GETLANG("nav_editcat") . " " . $IN[catname] . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit&cid=" . $IN["id"] . "'>" . GETLANG("browse") . " " . $IN["catname"] . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Modified data for category '{$IN['catname']}'");			return;		}		// If we're here then we must be about to view the form		$table = "dl_categories";		$id = $IN['id'];		$sqlid = "cid=" . $id;		$function = "editcat";		$this->files_catForm($id, $table, $sqlid, $function);		$this->output .= admin_foot();	}	// ===========================================================	//  Category Form	//	The user interface to edit this category. Also used	//	when adding a NEW categroy. Clever eh?	// ===========================================================	function files_catForm($id, $table, $sqlid, $function)	{		global $CONFIG, $sid, $std, $DB;		// Check if data for edit is being sent		if ($table) {			$result2 = $DB->query("SELECT * FROM $table WHERE $sqlid");			$myrow2 = $DB->fetch_row($result2);		}		$this->output .= "<form method='post' enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=$function' name='editcat'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("nav_editcat");		$this->output .= new_row();		$this->output .= GETLANG("cap_catname") . ":";		$this->output .= new_col();		$this->output .= "<input name='catname' type='text' size='30' value='" . $myrow2["name"] . "'>";		$this->output .= new_row();		if ($myrow2["thumb"]) {			$this->output .= GETLANG("cap_catimg") . ":";			$this->output .= new_col();			if (is_file("{$CONFIG['imagesfolder']}/t_{$myrow2['thumb']}"))				$thumb = "<img src='{$CONFIG['imagesurl']}/t_{$myrow2['thumb']}'>";			else				$thumb = "<img src='{$CONFIG['imagesurl']}/{$myrow2['thumb']}'>";			$this->output .= "{$thumb} [ <a href='admin.php?sid=$sid&area=files&act=editcat&removethumb=1&id=$id'>" . GETLANG("delete") . "</a> ]";		} else {			$this->output .= GETLANG("cap_catimg2") . ":";			$this->output .= new_col();			$this->output .= "<input name='catthumb' type='file' size='30'>";		}		if ($std->isUsingFullVersion()) {			$this->output .= new_row();			$this->output .= GETLANG("cap_subcat") . ":";			$this->output .= new_col();			$boxName = "parent";			$catarray[0] = $myrow2["parentid"];			$this->output .= $std->catListBox($catarray, $boxName, "canBrowse", true);		}		$this->output .= new_row();		$this->output .= GETLANG("cap_catdesc") . ":";		$this->output .= new_col();		$this->output .= "<textarea name='description' cols='24' rows='5'>" . $myrow2["description"] . "</textarea>";		if ($std->isUsingFullVersion()) {			$this->output .= new_row(2, "acptablesubhead");			$this->output .= GETLANG("cap_permissions");			$this->output .= new_row(2);			$this->output .= new_table();			$this->output .= new_row(-1, "acptableboldsub");			$this->output .= GETLANG("cap_group");			$this->output .= new_col();			$this->output .= "<div align='center'>" . GETLANG("candownload") . "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . GETLANG("canbrowse") . "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . GETLANG("canupload") . "</div>";			$this->listGroups($id);			$this->output .= end_table();		}		$this->output .= end_table();		$this->output .= "<input type='hidden' name='id' value='$id'>";		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "<input type='reset' name='reset' value='" . GETLANG("reset") . "'>";		$this->output .= "</form>";	}	function validateCat($id, $parent)	{		global $DB;		if ($id == $parent)			return false;		while ($parent != 0) {			$result = $DB->query("SELECT * FROM dl_categories WHERE cid=$parent");			if ($myrow = $DB->fetch_row($result)) {				if ($id == $myrow["parentid"])					return false;				else					$parent = $myrow["parentid"];			}		}		return true;	}	function files_ordercat()	{		global $IN, $DB, $rwdInfo, $module, $sid, $std;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_ordercats"));		if (!empty($IN["update"])) {			$orders = $IN["c"];			foreach ($orders as $i => $v) {				$update = array("sortorder" => $v);				$DB->update($update, "dl_categories", "cid=$i");			}			$this->output .= "Done";			$this->output .= admin_foot();			$std->addAdminLog("Reordered categories");			return;		}		if (!$rwdInfo->cats_saved) {			$DB->query("SELECT * FROM dl_categories");			if ($myrow = $DB->fetch_row($result)) {				do {					// Add category to cache					$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;				} while ($myrow = $DB->fetch_row($result));			}			$rwdInfo->cats_saved = 1;		}		if ($std->isUsingFullVersion()) {			($IN[cid]) ? $cid = $IN[cid] : $cid = 0;			$result = $DB->query("SELECT * FROM dl_categories WHERE parentid=$cid ORDER BY sortorder");		} else {			$result = $DB->query("SELECT * FROM dl_categories ORDER BY sortorder");		}		$num_cats = $DB->num_rows();		if ($myrow = $DB->fetch_row($result)) {			// Add category to cache			$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;			$this->output .= "<form method='post' enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=ordercat&cid=$cid'>";			$this->output .= $module->html_skincall("ad_cat_order_head", $this->html);			do {				$rows = $myrow["downloads"];				$id = $myrow["cid"];				$subcatlist = "";				$orderbox = "<select id='realbutton' name='c[{$myrow[cid]}]'>\n";				for ($i = 1; $i <= $num_cats; $i++) {					$orderbox .= "<option value='$i'";					if ($myrow["sortorder"] == $i)						$orderbox .= " selected";					$orderbox .= ">$i</option>\n";				}				$orderbox .= "</select>\n";				if ($std->isUsingFullVersion()) {					foreach ($rwdInfo->cat_cache as $subcat) {						if ($subcat["parentid"] == $myrow["cid"]) {							if ($subcatlist)								$subcatlist .= " | ";							$subcatlist .= $subcat["name"];						}					}				}				if ($subcatlist) {					$cat_name = "<a href='admin.php?sid=$sid&area=files&act=ordercat&cid={$myrow[cid]}'>$myrow[name]</a>";				} else {					$cat_name = "$myrow[name]";				}				$cat_desc = $myrow["description"];				$data = array(					"cat_name" => "$cat_name",					"cat_desc" => "$cat_desc",					"cat_subcats" => "$subcatlist",					"cat_order" => "$orderbox");				$this->output .= $module->html_skincall("ad_cat_order_row", $this->html, $data);			} while ($myrow = $DB->fetch_row($result));			$this->output .= $module->html_skincall("ad_cat_order_foot", $this->html);			$this->output .= "<input type='submit' name='update' value='" . GETLANG("update") . "'>";		}		$this->output .= admin_foot();	}	// ===========================================================	//  FILES FUNCTIONS	// ===========================================================	//  Display Files	//	Lists all files in this category with ACP edit delete	//	links etc	// ===========================================================	function adDisplayLinks($catID = 0)	{		global $DB, $IN, $CONFIG, $rwdInfo, $module, $std, $sid;		if (!$IN["sortvalue"])			$sortvalue = $CONFIG["default_sort"];		else			$sortvalue = $std->authSortValue($IN["sortvalue"]);		if (!$IN["order"])			$order = $CONFIG["default_order"];		else			$order = $std->authOrderValue($IN["order"]);		if (!$IN["limit"])			$limit = 0;		else			$limit = intval($IN["limit"]);		// Set category data if not already saved... which it probably should be		if (!$rwdInfo->cat_cache[$catID]) {			$catres = $DB->query("SELECT * FROM dl_categories WHERE cid=$catID");			$catrow = $DB->fetch_row();			$rwdInfo->cat_cache[$catID] = $catrow;		}		if ($std->isUsingFullVersion()) {			// Attempt to get custom download field data			$customFields = array();			if ($CONFIG['doCustomFields']) {				$DB->query("SELECT * FROM dl_custom");				while ($cfrow = $DB->fetch_row()) {					$index = "custom_" . $cfrow['cid'];					$customFields[$index] = $cfrow;				}			}		}		$result = $DB->query("SELECT l.*, cd.*, sym.*				    FROM dl_symlinks sym					LEFT JOIN dl_links l ON (l.did=sym.sym_did)					LEFT JOIN dl_custom_data cd ON (cd.uid=l.did)				    WHERE sym.sym_catid=$catID AND l.approved=1				    ORDER BY pinned DESC, $sortvalue $order LIMIT $limit , {$CONFIG['links_per_page']}");		$order_box = $this->order_box($catID, $sortvalue, $order);		$pages = $std->pages($rwdInfo->cat_cache[$catID]["downloads"], $CONFIG["links_per_page"], "admin.php?sid=$sid&area=files&act=edit&cid=$catID&sortvalue=$sortvalue&order=$order");		if ($myrow = $DB->fetch_row($result)) {			$batchpost = "admin.php?sid=$sid&area=files&act=batch";			$data = array("batchpost" => $batchpost,				"cat_name" => $rwdInfo->cat_cache[$catID]["name"],				"order_boxes" => $order_box,				"pages" => "$pages");			$this->output .= $module->html_skincall("ad_cat_listing_head", $this->html, $data);			do {				$data = $this->parse_file_data($myrow, $customFields, 0, 1);				$data["id"] = $myrow["sym_id"];				$this->output .= $module->html_skincall("ad_cat_listing_row", $this->html, $data);			} while ($myrow = $DB->fetch_row($result));			$data = array("order_boxes" => $order_box,				"pages" => $pages,				"cid" => $catID);			$this->output .= $module->html_skincall("ad_cat_listing_foot", $this->html, $data);		} else			$this->output .= GETLANG("nodls");	}	// ===========================================================	//  Mass Move/Delete	//	Performs a batch operation on the selected files	// ===========================================================	function files_batch()	{		global $IN, $DB, $sid;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editfiles"));		$this->files_dobatch("admin.php?sid=$sid&area=files&act=batch", true);		$this->output .= admin_foot();	}	// ===========================================================	//  Edit Download	//	Calls functions from parent class functions/files.php	// ===========================================================	function files_editdl()	{		global $IN, $DB, $rwdInfo, $std, $sid;		$symid = $IN['id'];		$result = $DB->query("SELECT l.*, sym.*							  FROM dl_symlinks sym							  LEFT JOIN dl_links l ON (l.did=sym.sym_did)							  WHERE sym.sym_id={$symid}");		$newdata = $myrow = $DB->fetch_row();		$dlid = $myrow['did'];		$std->updateNav(" > {$myrow['name']}", $myrow["sym_catid"], 1);		$DB->query("SELECT sym_catid FROM dl_symlinks WHERE sym_did=$dlid");		while (($myrow2 = $DB->fetch_row()))			$newdata['catlist'][] = $myrow2['sym_catid'];		$approvePage = $IN["approvePage"];		if ($approvePage)			$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_approvefiles"));		else			$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editdl"));		if ($IN["removefile"]) {			$table = "dl_links";			$sqlid = "did={$dlid}";			$type = "maskName";			$DB->query("SELECT * FROM dl_links WHERE did={$dlid}");			$myrow = $DB->fetch_row();			if ($this->removeFile($rwdInfo->path, $table, $sqlid, $dlid, $type)) {				$this->output .= GETLANG("filedl") . "<br><br>";			} else {				$this->output .= GETLANG("er_unlink") . "<br><br>";			}			if (!$approvePage)				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			else				$this->output .= "+ <a href='admin.php?sid=$sid&area=unapproved&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_approvefiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editdl&id={$symid}'>" . GETLANG("backto") . " " . GETLANG("nav_editdl") . " {$myrow['name']}</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Removed download from file '{$myrow['name']}'");			return;		}		if ($IN["confirm"]) {			if (!$this->saveEdit($symid, $dlid))				$std->error(GETLANG("er_editdl"));			if (!$approvePage)				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			else				$this->output .= "+ <a href='admin.php?sid=$sid&area=unapproved&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_approvefiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editdl&id={$symid}'>" . GETLANG("backto") . " " . GETLANG("nav_editdl") . " " . $IN["name"] . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Edited file '{$IN['name']}'");			return;		}		if ($IN["preview"] and !$IN["updateform"]) {			$post = "admin.php?sid=$sid&area=files&act=editdl";			$this->previewEdit($post);			$this->output .= admin_foot();			return;		}		// Else display the edit form		$post = "<form method='post' enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=editdl&id={$symid}'>";		if ($IN["updateform"]) {			$newdata = $IN;			$newdata['download'] = $newdata['oldfile'];			foreach ($IN['categoryid'] as $c) {				$newdata['catlist'][] = $c;			}		}		$this->files_dlMainForm($dlid, $symid, $newdata, 1, $post);		$this->output .= admin_foot();	}	// ===========================================================	//  Remove gallery thumbnail	//	Calls remove function in gallery class	// ===========================================================	function files_deleteimg()	{		global $IN, $sid;		include ROOT_PATH . "/functions/gallery.php";		$gallery = new gallery();		$dlid = $IN["id"];		$gallery->removeThumb("admin.php?sid=$sid&area=files&act=deleteimg&id=$dlid", "admin.php?sid=$sid&area=files&act=editdl&id=$dlid");	}	// ===========================================================	//  Add File	//	Handles the users input to add new file	// ===========================================================	function files_adddl()	{		global $DB, $IN, $CONFIG, $sid, $guser, $std;		require_once ROOT_PATH . "/engine/upload.php";		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_adddl"));		$newdata = array();		if ($IN["preview"]) {			if ($IN["categoryid"] == 0) {				$std->error(GETLANG("er_basecat"));			} elseif ($IN["name"] == '') {				$error .= $IN["name"] ? "" : GETLANG("name") . "<br>";				$std->warning(GETLANG("warn_missing") . GETLANG("warn_fields") . ":<br>" . $error);			} else {				$upload_limit = 0;				// Upload thumbnails				$thumbCount = 0;				for ($i = 0; $i < $IN["thumbs"]; $i++) {					$fieldName = "thumb" . $i;					$upload = new CUpload();					$upload->uploadImage($fieldName, $upload_limit);					if (!$upload->file_name)						continue;					$thumbCount++;					$dlThumbs[] = $upload;				}				// If a file was uploaded				if ($_FILES["download"]['name']) {					$newFile = new CUpload();					$newFile->uploadFile("download", $upload_limit);					if (!$newFile->file_name)						$std->error("Failed to upload");					$dlfile = $newFile->file_name;				} // Otherwise a url was provided				else {					$dlfile = $IN["downloadurl"];					$filesize = "unknown";				}				// Or was it?				if ($dlfile == "http://")					$dlfile = "";				// Hope so...				if ($dlfile) {					$newdata = $IN;					$newdata['description'] = $std->mynl2br($newdata['description']);					$newdata['adminreview'] = $std->mynl2br($newdata['adminreview']);					// Save thumbnails as post data					for ($i = 0; $i < $thumbCount; $i++) {						$fieldName = "name" . $i;						$newdata[$fieldName] = $dlThumbs[$i]->file_name;						$fieldName = "imageSize" . $i;						$newdata[$fieldName] = $dlThumbs[$i]->image_size;						$fieldName = "type" . $i;						$newdata[$fieldName] = $dlThumbs[$i]->file_type;					}					$newdata["thumbCount"] = $thumbCount;					$newdata["download"] = $dlfile;					$newdata["realsize"] = $newFile->real_size;					$newdata["filesize"] = $newFile->file_size;					$newdata["fileType"] = $newFile->file_type;					$newdata["maskName"] = $newFile->masked_file;					$newdata["imagesize"] = $newFile->image_size;					$newdata["downloads"] = 0;					$newdata["userrating"] = "n/a";					$formdata = $this->parseFormData($newdata);					$post = "admin.php?sid=$sid&area=files&act=adddl";					$this->files_dlPreviewMain($formdata, "", $post);				} else {					// You great lemon!					$std->error(GETLANG("er_nodl"));				}			}		} elseif ($IN["confirm"]) {			$time = date('Y-m-d H:i:s', time());			$approved = 1;			// Asign download to user			$owner = $guser->userid;			$upload = new CUpload();			$upload->moveFile($IN["maskName"], $IN["maskName"]);			if ($upload->masked_file == "file.rwd")				$download = $IN["download"];			else				$download = $IN["download"];			// Get rid of <br> tags from mirror list			$mirrors = eregi_replace('<br[[:space:]]*/?[[:space:]]*>', "\n", $IN["mirrors"]);			$mirrors = eregi_replace('&lt;br[[:space:]]*/?[[:space:]]*&gt;', "\n", $mirrors);			// Get rid of <br> tags from mirror list			$mirrornames = eregi_replace('<br[[:space:]]*/?[[:space:]]*>', "\n", $IN["mirrornames"]);			$mirrornames = eregi_replace('&lt;br[[:space:]]*/?[[:space:]]*&gt;', "\n", $mirrornames);			$IN['description'] = $std->undoHTMLChars($IN['description']);			$IN['adminreview'] = $std->undoHTMLChars($IN['adminreview']);			if ($std->isExternalFile($download)) {				$realsize = $IN['sizenum'] * 1024;				$filesize = $std->my_filesize($IN['sizenum'] * 1024);			} else {				$filesize = $IN['filesize'];				$realsize = $IN['realsize'];			}			$insert = array("name" => $IN["name"],				"description" => $IN["description"],				"owner" => $owner,				"author" => $IN["author"],				"download" => $download,				"version" => $IN["version"],				"realsize" => $realsize,				"mirrors" => $mirrors,				"mirrornames" => $mirrornames,				"filesize" => $filesize,				"fileType" => $IN["fileType"],				"maskName" => $IN["maskName"],				"date" => $time,				"approved" => $approved);			$insertfull = array("adminrating" => $IN["adminrating"],				"adminreview" => $IN["adminreview"]);			if ($std->isUsingFullVersion()) {				$insert = array_merge($insert, $insertfull);			}			$DB->insert($insert, "dl_links");			$dlid = $DB->insert_id();			// Add sym links			for ($i = 0; $i < count($IN['categoryid']); $i++) {				$insert = array("sym_did" => $dlid,					"sym_catid" => $IN['categoryid'][$i]);				$DB->insert($insert, "dl_symlinks");			}			for ($i = 0; $i < count($IN['categoryid']); $i++)				$this->incrementCounter($IN['categoryid'][$i], $dlid, $IN["name"], $guser->userid);			if ($std->isUsingFullVersion()) {				// Add custom data				// Add id number reference first				$insert2 = array("uid" => $dlid);				$DB->insert($insert2, "dl_custom_data");				// Query number of custom fields				$r1 = $DB->query("SELECT * FROM dl_custom");				if ($row1 = $DB->fetch_row($r1)) {					// For every custom field					do {						// Update with custom entry						$id = $row1["cid"];						$index = "custom" . $id;						$data = $IN[$index];						$update = array("custom$id" => $data);						$DB->update($update, "dl_custom_data", "uid=$dlid");					} while ($row1 = mysql_fetch_array($r1));				}			}			for ($i = 0; $i < $IN["thumbCount"]; $i++) {				//$tempName = "thumb".$i;				$realName = "name" . $i;				$imgSize = "imageSize" . $i;				$type = "type" . $i;				if ($IN['act'] == "useradddl")					$upload_limit = $CONFIG["uploadlimit"];				else					$upload_limit = 0;				$upload = new CUpload();				$upload->moveImage($IN["$realName"], $IN["$realName"]);				$insertimg = array("realName" => $upload->masked_file,					"dlid" => $dlid,					"size" => $IN[$imgSize],					"type" => $IN[$type]);				$DB->insert($insertimg, "dl_images");			}			$this->output .= GETLANG("dladded") . ". " . GETLANG("dlindb") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=adddl'>" . GETLANG("backto") . " " . GETLANG("nav_adddl") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Added new file '{$IN['name']}'");		} else if ($IN["updateform"]) {			$post = "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=adddl'>";			$this->files_dlMainForm("", "", $IN, 1, $post);		} else {			$post = "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=adddl'>";			$this->files_dlMainForm("", "", "", 1, $post);		}		$this->output .= admin_foot();	}	// ===========================================================	//  Custom Fields	//	The truely legendary custom file fields stuff	// ===========================================================	function customFields()	{		global $DB, $IN, $sid, $std;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_custom"));		if ($IN["submit"]) {			if ($IN["caption"] == "" || ($IN["field"] == "menu" and $IN["options"] == "")) {				$std->error(GETLANG("warn_missing"));			} else {				if ($IN["edit"]) {					$cid = $IN["edit"];					$update = array("caption" => $IN["caption"],						"description" => $IN["description"],						"field" => $IN["field"],						"size" => $IN["size"],						"max" => $IN["max"],						"options" => $IN["options"],						"admins" => ($IN["admins"]) ? 1 : 0);					$DB->update($update, "dl_custom", "cid=$cid");					$this->output .= GETLANG("customsuccess") . "<br><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom'>" . GETLANG("backto") . " " . GETLANG("nav_custom") . "</a><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom&edit=" . $cid . "'>" . GETLANG("backto") . " " . GETLANG("edit") . " " . GETLANG("nav_custom") . " ( " . $IN["caption"] . " )</a><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";					$this->output .= admin_foot();					$std->addAdminLog("Modified custom field '{$IN['caption']}'");					return;				} else {					$insert = array("caption" => $IN["caption"],						"description" => $IN["description"],						"field" => $IN["field"],						"size" => $IN["size"],						"max" => $IN["max"],						"options" => $IN["options"],						"admins" => ($IN["admins"]) ? 1 : 0);					$DB->insert($insert, "dl_custom");					$newid = $DB->insert_id();					$sql = "ALTER TABLE dl_custom_data ADD custom$newid TEXT NOT NULL";					$result = $DB->query($sql);					$this->output .= GETLANG("customsuccess") . "<br><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom'>" . GETLANG("backto") . " " . GETLANG("nav_custom") . "</a><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom&addnew=1'>" . GETLANG("backto") . " " . GETLANG("addnew") . " " . GETLANG("nav_custom") . "</a><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";					$this->output .= admin_foot();					$std->addAdminLog("Added custom field '{$IN['caption']}'");					return;				}			}		} else if ($IN["addnew"]) {			$this->customForm();		} else if ($IN["edit"]) {			$cid = $IN["edit"];			$result = $DB->query("SELECT * FROM dl_custom WHERE cid=$cid");			if ($myrow = $DB->fetch_row($result))				$this->customForm($myrow);			else				$std->error(GETLANG("er_noid"));		} else if ($IN["delete"]) {			if ($IN["confirm"]) {				$cid = $IN["delete"];				$DB->query("DELETE FROM dl_custom WHERE cid=$cid");				$DB->query("ALTER TABLE dl_custom_data DROP custom$cid");				$this->output .= GETLANG("customdel") . "<br><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom'>" . GETLANG("backto") . " " . GETLANG("nav_custom") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				$std->addAdminLog("Removed custom field'");			} else if ($IN["cancel"]) {				$cid = $IN["delete"];				$this->output .= GETLANG("delcancel") . "<p>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom'>" . GETLANG("backto") . " " . GETLANG("nav_custom") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=custom&edit=" . $cid . "'>" . GETLANG("backto") . " " . GETLANG("edit") . " " . GETLANG("nav_custom") . " ( " . $IN["caption"] . " )</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			} else {				$std->warning(GETLANG("warn_delcustom") . "<p>"					. "<form method='post' action='admin.php?sid=$sid&area=files&act=custom&delete=" . $IN["delete"] . "'>"					. "<input type='hidden' name='id' value='" . $IN["id"] . "'>"					. "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>");			}		} else {			$this->output .= new_table();			$this->output .= new_row(4, "acptablesubhead");			$this->output .= GETLANG("nav_custom");			$this->output .= new_row(-1, "acptablesubhead");			$this->output .= GETLANG("fieldid");			$this->output .= new_col();			$this->output .= GETLANG("caption");			$this->output .= new_col();			$this->output .= "&nbsp;";			$this->output .= new_col();			$this->output .= "&nbsp;";			$result = $DB->query("SELECT * FROM dl_custom");			if ($myrow = $DB->fetch_row($result)) {				do {					$this->output .= new_row();					$this->output .= "custom_$myrow[cid]";					$this->output .= new_col();					$this->output .= $myrow["caption"];					$this->output .= new_col();					$this->output .= "<div align='center'><a href='admin.php?sid=$sid&area=files&act=custom&delete=$myrow[cid]'>" . GETLANG("delete") . "</a></div>";					$this->output .= new_col();					$this->output .= "<div align='center'><a href='admin.php?sid=$sid&area=files&act=custom&edit=$myrow[cid]'>" . GETLANG("edit") . "</a></div>";				} while ($myrow = $DB->fetch_row($result));			}			$this->output .= end_table();			$this->output .= "<div align='center'><a href='admin.php?sid=$sid&area=files&act=custom&addnew=1'>" . GETLANG("addnew") . "</a></div>";		}		$this->output .= admin_foot();	}	// ===========================================================	//  Custom Form	//	The user interface for adding such truely legendary	//	custom file fields	// ===========================================================	function customForm($data = NULL)	{		global $sid, $std;		$std->AssertUsingFullVersion();		if ($data)			$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=custom&edit=$data[cid]'>";		else			$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=custom'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("nav_custom");		$this->output .= new_row();		$this->output .= GETLANG("cap_caption") . ":";		$this->output .= new_col();		$this->output .= "<input name='caption' type='text' size='30' value='" . $data["caption"] . "'>";		$this->output .= new_row();		$this->output .= GETLANG("cap_desc") . ":";		$this->output .= new_col();		$this->output .= "<input name='description' type='text' size='30' value='" . $data["description"] . "'>";		$this->output .= new_row();		$this->output .= GETLANG("cap_fieldtype") . ":";		$this->output .= new_col();		$this->output .= "<select name='field'>";		if ($data["field"] == "text")			$this->output .= "<option value='text' selected>" . GETLANG("op_textField") . "</option>";		else			$this->output .= "<option value='text'>" . GETLANG("op_textField") . "</option>";		if ($data["field"] == "menu")			$this->output .= "<option value='menu' selected>" . GETLANG("op_dropDown") . "</option>";		else			$this->output .= "<option value='menu'>" . GETLANG("op_dropDown") . "</option>";		$this->output .= "</select>";		$this->output .= new_row();		$this->output .= GETLANG("cap_tbsize") . ":";		$this->output .= new_col();		$this->output .= "<input name='size' type='text' size='4' maxlength='3' value='" . $data["size"] . "'>";		$this->output .= new_row();		$this->output .= GETLANG("cap_maxinput") . ":";		$this->output .= new_col();		$this->output .= "<input name='max' type='text' size='4' maxlength='3' value='" . $data["max"] . "'>";		$this->output .= new_row();		$this->output .= GETLANG("cap_optcontent") . "<br>";		$this->output .= GETLANG("cap_optcontentDesc") . "<br>";		$this->output .= "m=Male<br>			  f=Female<br>			  u=Not Telling<br>			  Will produce:<br>			  <select name='null'>				<option value='m'>Male</option>				<option value='f'>Female</option>				<option value='u'>Not Telling</option>			  </select>			  <br>			  value on left [ie. m,f,u] will be displayed on requested pages";		$this->output .= new_col();		$this->output .= "<textarea name='options' cols='30' rows='5'>" . $data["options"] . "</textarea>";		$this->output .= new_row();		$this->output .= GETLANG("cap_adminonly") . ":";		$this->output .= new_col();		if ($data["admins"])			$this->output .= "<input type='checkbox' name='admins' value='1' checked>";		else			$this->output .= "<input type='checkbox' name='admins' value='1'>";		$this->output .= end_table();		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "</form>";	}	// ===========================================================	//  Delete File	//	The confirm dialog for removing a file	// ===========================================================	function files_deletedl()	{		global $IN, $DB, $std, $sid;		$symid = intval($IN['id']);		$DB->query("SELECT l.did, l.name                    FROM dl_symlinks sym                    LEFT JOIN dl_links l  ON (l.did=sym.sym_did)                    WHERE sym.sym_id={$symid}");		$myrow = $DB->fetch_row();		$dlid = $myrow['did'];		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_editfiles"));		if ($IN["confirm"]) {			if ($this->deleteLink($dlid)) {				$this->output .= GETLANG("deldl") . "<br><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			}		} else if ($IN["cancel"]) {			$this->output .= GETLANG("delcancel") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=edit'>" . GETLANG("backto") . " " . GETLANG("nav_editfiles") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=editdl&id={$symid}'>" . GETLANG("backto") . " " . GETLANG("nav_editdl") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";		} else {			$std->warning(GETLANG("warn_dldel") . "<p>"				. "<form method='post' action='admin.php?sid=$sid&area=files&act=deletedl'>"				. "<input type='hidden' name='id' value='{$symid}'>"				. "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>");		}		$this->output .= admin_foot();	}	// ===========================================================	//  Display Unapproved	//      Displays all files awaiting approval	// ===========================================================	function displayUnapproved()	{		global $sid, $DB, $std, $module;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_approvefiles"));		// FIXME: Duplicate entries		$result = $DB->query("SELECT l.*, sym.* FROM dl_links l                              LEFT JOIN dl_symlinks sym ON (sym.sym_did=l.did)                              WHERE l.approved=0");		if ($myrow = $DB->fetch_row($result)) {			$forminput = "?sid=$sid&area=files&act=approveSelect";			$data = array("cat_name" => GETLANG("unapp"),				"form_approve" => "$forminput");			$this->output .= $module->html_skincall("ad_file_approve_head", $this->html, $data);			do {				$id = $myrow["did"];				$date = $std->convertDate($myrow["date"]);				$name = $myrow[name];				$approve = "<a href='admin.php?sid=$sid&area=files&act=qapprove&id=$id&'>" . GETLANG("approve") . "</a>";				$delete = "<a href='admin.php?sid=$sid&area=files&act=deletedl&id=$id'>" . GETLANG("delete") . "</a>";				$edit = "<a href='admin.php?sid=$sid&area=files&act=editdl&id={$myrow['sym_id']}&approvePage=1'>" . GETLANG("edit") . "</a>";				$data = array("name" => $name,					"id" => $id,					"author" => $myrow[author],					"date" => $date,					"counter" => $myrow[downloads],					"approve" => "$approve",					"edit" => "$edit",					"delete" => "$delete");				$this->output .= $module->html_skincall("ad_file_approve_row", $this->html, $data);			} while ($myrow = $DB->fetch_row($result));			$this->output .= $module->html_skincall("ad_file_approve_foot", $this->html);		} else			$std->info(GETLANG("nounapp"));		$this->output .= admin_foot();	}	// ===========================================================	//  Approve / Delete	//    Quickly approve or delete all checked files	// ===========================================================	function checkedApprove()	{		global $DB, $IN, $std, $sid;		$ids = count($IN["dlid"]);		if ($ids == 0) {			$std->error(GETLANG("er_noselect"));			return;		}		if ($IN["deleteChecked"]) {			if ($IN["confirm"]) {				for ($i = 0; $i < $ids; $i++) {					$std->addAdminLog("Deleted unapproved file");					$id = $IN["dlid"]["$i"];					if (!$this->deleteLink($id))						$std->error(GETLANG("er_stderrprefix"));				}				$std->info(GETLANG("deldl") . "<p>" . "<a href='admin.php?area=files&act=approvedl&sid=$sid'>" . GETLANG("continue") . "</a>");			} else if ($IN["cancel"]) {				$std->info(GETLANG("delcancel") . "<p>" . "<a href='admin.php?area=files&act=modify&sid=$sid'>" . GETLANG("continue") . "</a>");			} else {				$warntext = "<p><form method='post' action='admin.php?area=files&act=approveSelect&sid=$sid'>";				for ($j = 0; $j < $ids; $j++)					$warntext .= "<input type='hidden' name='dlid[]' value='" . $IN["dlid"][$j] . "'>";				$warntext .= "<input type='hidden' name='deleteChecked' value='1'>";				$warntext .= "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>";				$std->warning(GETLANG("warn_dldel") . $warntext);			}		} else {			for ($i = 0; $i < $ids; $i++) {				$id = $_POST["dlid"]["$i"];				$DB->query("UPDATE dl_links SET approved='1' WHERE did=$id");				$result = $DB->query("SELECT l.name, l.owner, sym.sym_catid FROM dl_links l                                        LEFT JOIN dl_symlinks sym ON (sym.sym_did={$id})                                        WHERE l.did='{$id}'");				while ($myrow = $DB->fetch_row($result)) {					$this->incrementCounter($myrow["sym_catid"], $id, $myrow['name'], $myrow['owner']);				}				$std->addAdminLog("Approved file '{$myrow['name']}'");			}			$std->info(GETLANG("dlapproved") . ".<br>" . "<a href='index.php?area=files&act=unapproved&sid=$sid'>" . GETLANG("continue") . "</a>");		}	}	// ===========================================================	//  Quick Approve	//      Approve selected file	// ===========================================================	function qApprove()	{		global $DB, $IN, $sid;		$id = $IN["id"];		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_approvefiles"));		$DB->query("UPDATE dl_links SET approved='1' WHERE did=$id");		$result = $DB->query("SELECT l.name, l.owner, sym.sym_catid FROM dl_links l                                LEFT JOIN dl_symlinks sym ON (sym.sym_did={$id})                                WHERE l.did='{$id}'");		while ($myrow = $DB->fetch_row($result)) {			$this->incrementCounter($myrow["sym_catid"], $id, $myrow['name'], $myrow['owner']);		}		$std->addAdminLog("Approved file '{$myrow['name']}'");		$this->output .= GETLANG("dlapproved") . "<br><br>";		$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=unapproved'>" . GETLANG("backto") . " " . GETLANG("nav_approvefiles") . "</a><br>";		$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";		$this->output .= admin_foot();	}	// ===========================================================	//  Mass Upload	//	The long awaited miracle function is here!	// ===========================================================	function massUpload()	{		global $sid, $std, $guser, $rwdInfo;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_massupload"));		$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=domassupload'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("configuration");		$this->output .= new_row();		$this->output .= GETLANG("pathtofolder");		$this->output .= new_col();		$this->output .= "<input name='upPath' type='text' size='30' value='{$rwdInfo->path}'>";		$this->output .= new_row();		$this->output .= GETLANG("dlperbatch");		$this->output .= new_col();		// Drop down box		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("defaultsettings");		$this->output .= new_row();		$this->output .= GETLANG("defaultcat");		$this->output .= new_col();		$this->output .= $std->catListBox(0, "defaultCat", "canUL", 1);		$this->output .= new_row();		$this->output .= GETLANG("defaultauthor");		$this->output .= new_col();		$this->output .= "<input name='defaultAuthor' type='text' size='30' value='{$guser->username}'>";		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("cleanup");		$this->output .= new_row();		$this->output .= GETLANG("removefiles") . ":<br>";		$this->output .= GETLANG("filesmustbe");		$this->output .= new_col();		$this->output .= "<input type='checkbox' name='cleanup' value='1' checked>";		$this->output .= end_table();		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	// ===========================================================	//  Do Mass Upload	//	Gets the file listing and displays the list	// ===========================================================	function doMassUpload()	{		global $IN, $DB, $rwdInfo, $std, $guser, $sid;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_massupload"));		if ($IN["submit"]) {			require_once ROOT_PATH . "/engine/upload.php";			//$this->output .=Array($IN);			foreach ($IN as $element) {				if (is_array($element) and $element['file']) {					// Must be a file being uploaded					$time = date('Y-m-d H:i:s', time());					$approved = 1;					// Only add files that have been ticked					if (!$element["approve"])						continue;					// Asign download to user					$owner = $guser->userid;					$upload = new CUpload();					$upload->moveMassUploadFile($IN["upPath"], $element["file"]);					$insert = array("name" => $element["name"],						"author" => $element['author'],						"description" => "",						"owner" => $owner,						"download" => $upload->file_name,						"mirrors" => "",						"mirrornames" => "",						"version" => "",						"adminrating" => 0,						"adminreview" => "",						"realsize" => $upload->real_size,						"filesize" => $upload->file_size,						"fileType" => $upload->file_type,						"maskName" => $upload->masked_file,						"date" => $time,						"approved" => 1);					$DB->insert($insert, "dl_links");					$dlid = $DB->insert_id();					$std->addAdminLog("Mass added file '{$element['name']}'");					$insert = array("sym_did" => $dlid,						"sym_catid" => $element["cat"]);					$DB->insert($insert, "dl_symlinks");					$this->incrementCounter($element["cat"], $dlid, $element["file"], $guser->userid);					if ($IN["cleanup"]) {						$filepath = $IN["upPath"] . "/" . $element["file"];						if (is_file($filepath)) {							if (!@unlink($filepath)) {								$this->output .= "Could not unlink $filepath<br>";							}						}					}					$IN["processed"] .= $element["file"] . "|";				}			}		}		if ($IN["processed"])			$done = explode("|", $IN["processed"]);		$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=domassupload'>";		// Get directory listing		$dir_handle = @opendir($IN["upPath"]) or die($IN["upPath"]);		$counter = 0;		if ($file = readdir($dir_handle)) {			$this->output .= "<script>			function doselectAll(theBox){			xState=theBox.checked;			elm=theBox.form.elements;			for(i=0;i<elm.length;i++)			 if(elm[i].type=='checkbox')			   elm[i].checked=xState;			}			</script>";			$this->output .= new_table();			$this->output .= new_row(-1, "acptablesubhead");			$this->output .= "<div align='center'>" . GETLANG("approve") . "</div>";			$this->output .= new_col();			$this->output .= GETLANG("name");			$this->output .= new_col();			$this->output .= GETLANG("author");			$this->output .= new_col();			$this->output .= GETLANG("category");			do {				if ($file != "." and $file != "..") {					if (is_dir($IN["upPath"] . "/" . $file)) {						continue;					}					// Skip over files already processed					$found = false;					if ($done) {						foreach ($done as $testFile) {							if ($file == $testFile) {								$found = true;								break;							}						}						if ($found)							continue;					}					// Generate a "safe" name for the array					$safename = $std->strip_ext($file);					$safename = preg_replace("/[^\w\.]/", "_", $safename);					$this->output .= new_row();					$this->output .= "<input type='hidden' name='{$safename}[file]' value='$file'>";					$this->output .= "<div align='center'><input type='checkbox' name='{$safename}[approve]' value='1' checked></div>";					$this->output .= new_col();					$this->output .= "<input name='{$safename}[name]' type='text' size='30' value='" . $std->strip_ext($file) . "'>";					$this->output .= new_col();					$this->output .= "<input name='{$safename}[author]' type='text' size='30' value='{$IN['defaultAuthor']}'>";					$this->output .= new_col();					$cat = array($IN["defaultCat"]);					$this->output .= $std->catListBox($cat, "{$safename}[cat]", "canUL", 1);					$counter++;				}			} while ($file = readdir($dir_handle));			$this->output .= new_row(-1, "acptablesubhead");			$this->output .= "<div align='center'><input type='checkbox' id='SelectALL' name='SelectALL' onClick='doselectAll(this)' checked></div>";			$this->output .= new_col();			$this->output .= GETLANG("selectall");			$this->output .= new_col();			$this->output .= "";			$this->output .= new_col();			$this->output .= "";			$this->output .= end_table();			$this->output .= "<input type='hidden' name='cleanup' value='$IN[cleanup]'>";			$this->output .= "<input type='hidden' name='processed' value='$IN[processed]'>";			$this->output .= "<input type='hidden' name='upPath' value='$IN[upPath]'>";			$this->output .= "<input type='hidden' name='defaultCat' value='$IN[defaultCat]'>";			$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";			$this->output .= "</form>";		}		closedir($dir_handle);		if ($counter < 1)			$this->output .= GETLANG("nofilesleft");		$this->output .= admin_foot();	}	function fileTypeControl()	{		global $IN, $DB, $CONFIG, $rwdInfo, $guser, $std, $sid;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_filetypes"));		if ($IN["submit"]) {			require_once ROOT_PATH . "/engine/upload.php";			foreach ($IN as $element) {				if (is_array($element)) {					$update = array("mimetype" => $element["mimetype"],						"icon" => $element["icon"],						"allowed" => $element["allowed"],						"maxsize" => $element["maxsize"] * 1024);					$id = $element["id"];					$DB->update($update, "dl_filetypes", "fid=$id");					$std->addAdminLog("Modified filetype '{$element['mimetype']}'");				}			}			$std->saveDBConfigKey("allowunknown", $IN["allowunknown"]);			$this->output .= GETLANG("typesupdated") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=filetype'>" . GETLANG("backto") . " " . GETLANG("nav_filetypes") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			return;		}		$this->output .= "<a href=\"\" onClick=\"window.open('admin.php?sid=$sid&area=files&act=lookup','lookup','width=400,height=150,resizable=no,scrollbars=no,toolbar=no,location=no')\">" . GETLANG("mimelookup") . "</a>";		$mime_path = $rwdInfo->url . "/skins/skin" . $CONFIG["defaultSkin"] . "/mime_types";		$DB->query("SELECT * FROM `dl_filetypes`");		$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=filetype'>";		$this->output .= new_table(-1, "acptablesubhead", "", "100%", "50");		$this->output .= "";		$this->output .= new_col();		$this->output .= GETLANG("mimetype");		$this->output .= new_col();		$this->output .= GETLANG("icon");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("allowed") . "</div>";		$this->output .= new_col();		$this->output .= GETLANG("maxupload");		$this->output .= new_col();		$this->output .= GETLANG("currently");		$this->output .= new_col();		$this->output .= "&nbsp;";		if ($myrow = $DB->fetch_row()) {			do {				$maxsize = $myrow['maxsize'] / 1024;				$this->output .= new_row();				$this->output .= "<input name='{$myrow[mimetype]}[id]' type='hidden' value='{$myrow[fid]}'>";				$this->output .= "<div align='center'><img src='{$mime_path}/{$myrow[icon]}'></div>";				$this->output .= new_col();				$this->output .= "<input name='{$myrow[mimetype]}[mimetype]' type='text' size='30' value='{$myrow[mimetype]}'>";				$this->output .= new_col();				$this->output .= "<input name='{$myrow[mimetype]}[icon]' type='text' size='30' value='{$myrow[icon]}'>";				$this->output .= new_col();				$checked = $myrow["allowed"] ? "checked" : "";				$this->output .= "<div align='center'><input type='checkbox' name='{$myrow[mimetype]}[allowed]' value='1' $checked></div>";				$this->output .= new_col();				$this->output .= "<input name='{$myrow[mimetype]}[maxsize]' type='text' size='30' value='{$maxsize}'> k ";				$this->output .= new_col();				$this->output .= $std->my_filesize($myrow['maxsize']);				$this->output .= new_col();				$this->output .= "[ <a href='admin.php?sid=$sid&area=files&act=deltype&id={$myrow[fid]}'>" . GETLANG("delete") . "</a> ]";			} while ($myrow = $DB->fetch_row());		}		$this->output .= new_row();		$checked = $CONFIG["allowunknown"] ? "checked" : "";		$this->output .= "<div align='center'><input type='checkbox' name='allowunknown' value='1' $checked></div>";		$this->output .= new_col(4);		$this->output .= GETLANG("allowunlisted") . "<br>";		$this->output .= end_table();		$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("submit") . "'></div>";		$this->output .= "</form>";		$this->output .= "<div align='center'><a href='admin.php?sid=$sid&area=files&act=addmime'>" . GETLANG("addnewfiletype") . "</a></div>";		$this->output .= admin_foot();	}	// ===========================================================	//  Delete File type;	//    The confirm dialog for removing a file type	// ===========================================================	function files_deleteft()	{		global $IN, $DB, $sid, $std;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_filetypes"));		if ($IN["confirm"]) {			$id = $IN["id"];			$DB->query("DELETE FROM dl_filetypes WHERE fid=$id");			$this->output .= GETLANG("deltype") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=filetype'>" . GETLANG("backto") . " " . GETLANG("nav_filetypes") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Deleted filetype");			return;		} else if ($IN["cancel"]) {			$this->output .= $GETLANG("delcancel") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=filetype'>" . GETLANG("backto") . " " . GETLANG("nav_filetypes") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			return;		} else {			$std->warning(GETLANG("warn_dldel") . "<p>"				. "<form method='post' action='admin.php?sid=$sid&area=files&act=deltype'>"				. "<input type='hidden' name='id' value='" . $IN["id"] . "'>"				. "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>");		}		$this->output .= admin_foot();	}	function addMimeType()	{		global $IN, $DB, $sid, $std;		$std->AssertUsingFullVersion();		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_filetypes"));		if ($IN["submit"]) {			$DB->query("SELECT * FROM `dl_filetypes` WHERE `mimetype`='{$IN['mimetype']}'");			if ($DB->num_rows() > 0) {				$std->error(GETLANG("er_dupmimetype"));				return;			}			$insert = array("mimetype" => $IN["mimetype"],				"icon" => $IN["icon"],				"allowed" => $IN["allowed"],				"maxsize" => $IN["maxsize"]);			$DB->insert($insert, "dl_filetypes");			$this->output .= GETLANG("addtype") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=filetype'>" . GETLANG("backto") . " " . GETLANG("nav_filetypes") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=files&act=addmime'>" . GETLANG("backto") . " " . GETLANG("nav_addtypes") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Added filetype '{$IN['mimetype']}'");			$this->output .= admin_foot();			return;		}		$this->output .= "<a href=\"\" onClick=\"window.open('admin.php?sid=$sid&area=files&act=lookup','lookup','width=400,height=150,resizable=no,scrollbars=no,toolbar=no,location=no')\">Mime Type Lookup</a>";		$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=addmime'>";		$this->output .= new_table(-1, "acptablesubhead", "", "100%", "50");		$this->output .= GETLANG("mimetype");		$this->output .= new_col();		$this->output .= GETLANG("icon");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("allowed") . "</div>";		$this->output .= new_col();		$this->output .= GETLANG("maxupload");		$this->output .= new_row();		$this->output .= "<input name='mimetype' type='text' size='30'>";		$this->output .= new_col();		$this->output .= "<input name='icon' type='text' size='30'>";		$this->output .= new_col();		$this->output .= "<div align='center'><input type='checkbox' name='allowed' value='1' checked></div>";		$this->output .= new_col();		$this->output .= "<input name='maxsize' type='text' size='30'>";		$this->output .= end_table();		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function typeLookup()	{		global $IN, $sid, $rwdInfo;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_typeLookup"));		if ($IN["submit"]) {			if (!is_file("/usr/local/apache/conf/mime.types"))				$mimePath = $rwdInfo->path . "/mime.types";			else				$mimePath = "/usr/local/apache/conf/mime.types";			require_once ROOT_PATH . "/engine/mime_types.php";			$mime = new Mime_Types($mimePath);			$file_type = $mime->get_type($IN["ext"]);			if (!$file_type)				$file_type = "application/octet-stream";		}		$this->output .= "<form method=post enctype='multipart/form-data' action='admin.php?sid=$sid&area=files&act=lookup'>";		$this->output .= new_table(3);		$this->output .= GETLANG("mime_usethisform");		if ($file_type)			$this->output .= "<br><b>$IN[ext] = $file_type</b>";		$this->output .= new_row();		$this->output .= GETLANG("extension");		$this->output .= new_col();		$this->output .= "<input name='ext' type='text' size='10' value='$IN[ext]'>";		$this->output .= new_col();		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "</form>";		$this->output .= end_table();		$this->output .= admin_foot();	}	// =================================================================	// List Groups	//      Utility function to show groups and the permisions in passed cat id	// =================================================================	function listGroups($cid)	{		global $DB, $std, $guser, $rwdInfo;		$arrayIdx = 0;		$groups = $guser->getAllGroups();		$counter = 0;		if ($cid and empty($rwdInfo->cat_cache[$cid])) {			$result = $DB->query("SELECT * FROM dl_categories WHERE cid=$cid");			$catrow = $DB->fetch_row($result);			$rwdInfo->cat_cache[$cid] = $catrow;		}		$catrow = $rwdInfo->cat_cache[$cid];		foreach ($groups as $myrow) {			$navclass[$counter]->groupName = $myrow[$guser->db_g_title];			$navclass[$counter]->gID = $myrow[$guser->db_g_id];			$navclass[$counter]->canBrowse = $catrow["canBrowse"];			$navclass[$counter]->canDL = $catrow["canDL"];			$navclass[$counter]->canUL = $catrow["canUL"];			$counter++;		}		$this->output .= "<script>			function checkcol(theBox)			{				xState=theBox.checked;				var frm = document.editcat;				var str_part = '';				if (theBox.name == 'upload') { str_part = 'canUL' }				if (theBox.name == 'browse') { str_part = 'canBrowse' }				if (theBox.name == 'download') { str_part = 'canDL' }				for (var i = 0 ; i < frm.elements.length; i++)				{					var elm = frm.elements[i];					if ( elm.type == 'checkbox' )					{						var name = elm.name;						var instr = name.indexOf(str_part);						if (instr != -1)						{							elm.checked = xState;						}					}				}			}		</script>";		for ($i = 0; $i < count($navclass); $i++) {			$this->output .= new_row();			$this->output .= $navclass[$i]->groupName;			$this->output .= new_col();			$this->output .= "<div align='center'><input type='checkbox' name='canDL[$arrayIdx]' value='1'";			if ($std->hasPerms($navclass[$i]->canDL, $navclass[$i]->gID))				$this->output .= " checked";			$this->output .= "></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><input type='checkbox' name='canBrowse[$arrayIdx]' value='1'";			if ($std->hasPerms($navclass[$i]->canBrowse, $navclass[$i]->gID))				$this->output .= " checked";			$this->output .= "></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><input type='checkbox' name='canUL[$arrayIdx]' value='1'";			if ($std->hasPerms($navclass[$i]->canUL, $navclass[$i]->gID))				$this->output .= " checked";			$this->output .= "></div>";			$this->output .= "<input type='hidden' name='gID[$arrayIdx]' value='" . $navclass[$i]->gID . "'>";			$arrayIdx++;			//$this->getSubCats($navclass, $navclass[$i]->catID, $category, " +", $arrayIdx, $gid);		}		// Select All Checkboxes		$this->output .= new_row();		$this->output .= "<b>" . GETLANG("selectall") . "</b>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='download' onClick='checkcol(this)' ></div>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='browse' onClick='checkcol(this)' ></div>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='upload' onClick='checkcol(this)' ></div>";	}}$loader = new admin_files();?>