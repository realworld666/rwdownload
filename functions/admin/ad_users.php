<?php/* * Copyright (c) 2023. * RW::Software * Dave Conley * https://www.rwscripts.com/ */$loader = new admin_users();class admin_users{	var $output;	function admin_users()	{		global $IN, $OUTPUT;		switch ($IN["act"]) {			case 'groups':				$this->users_groups();				break;			case 'addgroup':				$this->users_editGroupForm();				break;			case 'delgroup':				$this->users_deleteGroup($IN["delete"]);				break;			case 'editusers':				$this->users_userSearch();				break;			case 'addmember':				$this->users_editMemberForm($IN["id"]);				break;			case 'editmember':				$this->users_editMember();				break;			case 'deletemember':				$this->users_deleteUser();				break;			case 'customdb':				$this->users_customDB();				break;			case 'savecustomdb':				$this->users_saveCustomDB();				break;			case 'newsletter':				$this->users_newsletter();				break;			case 'moderators':				$this->users_moderators();				break;			case 'editmods':				$this->users_editModerator();				break;			case 'deletemod':				$this->users_deleteModerator();				break;			case 'glist':				$this->users_listMembers();				break;			case 'unapproved':				$this->users_unapproved();				break;			default:				return;		}		$OUTPUT->add_output($this->output);	}	function createPermissionCheckbox($name, $value = 0)	{		$this->output .= new_row();		$this->output .= GETLANG($name);		$this->output .= new_col();		if ($value)			$this->output .= "<input type='checkbox' name='permissions[$name]' value='1' checked>";		else			$this->output .= "<input type='checkbox' name='permissions[$name]' value='1'>";	}	function users_groups()	{		global $CONFIG, $IN, $sid, $std, $guser, $DB, $modules;		if (isset($IN["edit"])) {			$gid = intval($IN["edit"]);			// Get groups from database			if ($gid < 0)				$thisGroup = $guser->getGuestGroup($gid);			else				$thisGroup = $guser->getSingleGroup($gid);			$this->users_editGroupForm($thisGroup);			return;		}		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_groups"));		if (!empty($IN["submit"])) {			// Error checking			if (!$IN["name"] and $CONFIG["usertype"] == USER_DEFAULT) {				$this->output .= $std->warning(GETLANG("warn_missing"));				$this->output .= admin_foot();				return;			}			$IN["dlLimitSize"] *= 1048576;			// Editting group			if ($IN["gid"]) {				// Save the gid from extinction. Oh precious gid, how we love thee				$gid = $IN["gid"];				// Save category permissions				$DB->query("SELECT cid, canBrowse, canDL, canUL FROM dl_categories");				while ($myrow = $DB->fetch_row()) {					$cid = $myrow["cid"];					$browseList[$cid] = $myrow["canBrowse"];					$dlList[$cid] = $myrow["canDL"];					$ulList[$cid] = $myrow["canUL"];				}				$cats = count($IN["catID"]);				// Get the array out of POST data				$canBrowse = $IN["canBrowse"];				$canUL = $IN["canUL"];				$canDL = $IN["canDL"];				$catID = $IN["catID"];				foreach ($catID as $idx => $val) {					if ($canBrowse[$idx]) {						// function takes integer 1 for add to string and 0 to remove from string						// Returns formated string						$browse = $this->formatPerms(1, $browseList[$catID[$idx]], $gid);					} else						$browse = $this->formatPerms(0, $browseList[$catID[$idx]], $gid);					if ($canUL[$idx])						$ul = $this->formatPerms(1, $ulList[$catID[$idx]], $gid);					else						$ul = $this->formatPerms(0, $ulList[$catID[$idx]], $gid);					if ($canDL[$idx])						$dl = $this->formatPerms(1, $dlList[$catID[$idx]], $gid);					else						$dl = $this->formatPerms(0, $dlList[$catID[$idx]], $gid);					$update = array("canDL" => $dl,						"canUL" => $ul,						"canBrowse" => $browse);					$DB->update($update, "dl_categories", "cid=$val");				}				$permissions = 0;				foreach ($IN['permissions'] as $k => $v) {					if ($v == 1) {						$permissions |= constant($k);					}				}				$update = array("dlLimitSize" => $IN["dlLimitSize"],					"limitSizePeriod" => $IN["limitSizePeriod"],					"dlLimitFiles" => ($IN["dlLimitFiles"]) ? $IN["dlLimitFiles"] : 0,					"limitFilesPeriod" => $IN["limitFilesPeriod"],					"permissions" => $permissions);				$newarray = $modules->saveGroupData($IN);				if (!empty($newarray))					$update = array_merge($update, $newarray);				$DB->update($update, "dl_groupsextra", "`geid`='{$gid}'");				if ($CONFIG["usertype"] == USER_DEFAULT) {					$update = array("name" => $IN["name"]);					$DB->update($update, "dl_groups", "`gid`='{$gid}'");				}				if ($IN['applyLimits']) {					// Set the offset					if ($IN["limitSizePeriod"] == 0)       // Per day						$offset = 86400;					else if ($IN["limitSizePeriod"] == 1) // Per week						$offset = 604800;					else if ($IN["limitSizePeriod"] == 2) // Per month						$offset = 2419200;					else if ($IN['limitSizePeriod'] == 3) // Per hour						$offset = 3600;					if ($IN["limitFilesPeriod"] == 0)       // Per day						$offset2 = 86400;					else if ($IN["limitFilesPeriod"] == 1) // Per week						$offset2 = 604800;					else if ($IN["limitFilesPeriod"] == 2) // Per month						$offset2 = 2419200;					else if ($IN['limitFilesPeriod'] == 3) // Per hour						$offset2 = 3600;					$time = time() + $offset;					$time2 = time() + $offset2;					$guser->updateMemberExtra("`{$guser->db_level}`='$gid'", "`gid`='$gid'");					$sql = "UPDATE `dl_memberextra` SET `dlLimitSize`='{$IN['dlLimitSize']}',                                                        `dlLimitFiles`='{$IN['dlLimitFiles']}',                                                        `limitSizePeriod`='{$time}',                                                        `limitFilesPeriod`='{$time2}'                                                        WHERE `gid`='{$gid}'";					$DB->query($sql);				}				$this->output .= GETLANG("users_groupEdit") . "<br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups'>" . GETLANG("backto") . " " . GETLANG("nav_groups") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups&amp;edit=$gid'>" . GETLANG("edit") . " " . $IN["name"] . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				$std->addAdminLog("Editted group {$IN['name']}");			} else {				// Adding a new group				$permissions = 0;				foreach ($IN['permissions'] as $k => $v) {					if ($v == 1) {						$permissions |= constant($k);					}				}				// Save the data we need now				$cats = count($IN["catID"]);				// Get the array out of POST data				$canBrowse = $IN["canBrowse"];				$canUL = $IN["canUL"];				$canDL = $IN["canDL"];				$catID = $IN["catID"];				$insert = array("name" => $IN["name"]);				$DB->insert($insert, "dl_groups");				$gid = $DB->insert_id();				$insert = array("geid" => $gid,					"dlLimitSize" => $IN["dlLimitSize"],					"limitSizePeriod" => $IN["limitSizePeriod"],					"dlLimitFiles" => ($IN["dlLimitFiles"]) ? 1 : 0,					"limitFilesPeriod" => $IN["limitFilesPeriod"],					"permissions" => $permissions);				$insert .= $modules->saveGroupData($IN);				$DB->insert($insert, "dl_groupsextra");				// Save category permissions				$DB->query("SELECT cid, canBrowse, canDL, canUL FROM dl_categories");				// Save current category permissions				while ($myrow = $DB->fetch_row()) {					$cid = $myrow["cid"];					$browseList[$cid] = $myrow["canBrowse"];					$dlList[$cid] = $myrow["canDL"];					$ulList[$cid] = $myrow["canUL"];				}				foreach ($catID as $idx => $val) {					if ($canBrowse[$idx]) {						// function takes integer 1 for add to string and 0 to remove from string						// Returns formated string						$browse = $this->formatPerms(1, $browseList[$catID[$idx]], $gid);					} else						$browse = $this->formatPerms(0, $browseList[$catID[$idx]], $gid);					if ($canUL[$idx])						$ul = $this->formatPerms(1, $ulList[$catID[$idx]], $gid);					else						$ul = $this->formatPerms(0, $ulList[$catID[$idx]], $gid);					if ($canDL[$idx])						$dl = $this->formatPerms(1, $dlList[$catID[$idx]], $gid);					else						$dl = $this->formatPerms(0, $dlList[$catID[$idx]], $gid);					$update = array("canDL" => $dl,						"canUL" => $ul,						"canBrowse" => $browse);					$DB->update($update, "dl_categories", "cid=$val");				}				$this->output .= GETLANG("users_groupEdit") . "<br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups'>" . GETLANG("backto") . " " . GETLANG("nav_groups") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=addgroup'>" . GETLANG("addgroup") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				$std->addAdminLog("Added group '{$IN['name']}'");			}			$this->output .= admin_foot();			return;		}		$this->output .= new_table();		$this->output .= new_row(-1, "acptablesubhead");		$this->output .= GETLANG("groupname");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("usersingroup") . "</div>";		$this->output .= new_col();		$this->output .= "&nbsp;";		if ($std->isUsingFullVersion()) {			$this->output .= new_col();			$this->output .= "&nbsp;";		}		if ($CONFIG['usertype'] == "smf" || $CONFIG['usertype'] == "smf2") {			$this->output .= new_row(-1, "normalrow");			$this->output .= "<a href='admin.php?sid={$sid}&amp;area=users&amp;act=glist&amp;gid=-1'>Unregistered Member</a>";			$this->output .= new_col();			$this->output .= "<div align='center'>1</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups&amp;edit=-1'>" . GETLANG("edit") . "</a> ]" . "</div>";			$this->output .= new_col();			$this->output .= "";		}		// Get groups from database		$allGroups = $guser->getAllGroups();		foreach ($allGroups as $g) {			$gid = $g[$guser->db_g_id];			if (!$std->isUsingFullVersion())				if ($gid != 1 && $gid != 5)					continue;			$this->output .= new_row(-1, "normalrow");			$this->output .= "<a href='admin.php?sid={$sid}&amp;area=users&amp;act=glist&amp;gid={$gid}'>{$g[$guser->db_g_title]}</a>";			$this->output .= new_col();			$this->output .= "<div align='center'>";			if ($CONFIG['usertype'] != USER_DEFAULT)				$this->output .= GETLANG("unknown");			else				$this->output .= $g['users'];			$this->output .= "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups&amp;edit=$gid'>" . GETLANG("edit") . "</a> ]" . "</div>";			if ($std->isUsingFullVersion()) {				$this->output .= new_col();				$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid=$sid&amp;area=users&amp;act=delgroup&amp;delete=$gid'>" . GETLANG("delete") . "</a> ]" . "</div>";			}		}		$this->output .= end_table();		if ($std->isUsingFullVersion()) {			if ($CONFIG['usertype'] == USER_DEFAULT)				$this->output .= "<div align='center'>[ <a href='admin.php?sid=$sid&amp;area=users&amp;act=addgroup'>" . GETLANG("addgroup") . "</a> ]</div>";		}		$this->output .= admin_foot();	}	function users_listMembers()	{		global $CONFIG, $IN, $sid, $guser;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_members"));		$userlist = $guser->getAllUsers("{$guser->db_name}, {$guser->db_email}", "", false, "WHERE `{$guser->db_level}`='{$IN['gid']}'");		$this->output .= new_table();		$this->output .= new_row(-1, "acptablesubhead");		$this->output .= GETLANG("username");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("email") . "</div>";		$this->output .= new_col();		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= "&nbsp;";		foreach ($userlist as $u) {			$mid = $u[$guser->db_id];			$this->output .= new_row();			$this->output .= $u[$guser->db_name];			$this->output .= new_col();			$this->output .= "<div align='center'>";			$this->output .= $u[$guser->db_email];			$this->output .= "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=addmember&amp;id={$mid}'>" . GETLANG("edit") . "</a> ]" . "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=deletemember&amp;id={$mid}'>" . GETLANG("delete") . "</a> ]" . "</div>";		}		$this->output .= end_table();		$this->output .= admin_foot();	}	function users_unapproved()	{		global $CONFIG, $IN, $DB, $std, $sid, $guser;		if ($CONFIG['usertype'] != USER_DEFAULT)			return;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_unapproved"));		if ($IN['id']) {			$update = array("group" => $CONFIG['approvedgroup']);			$DB->update($update, "dl_users", "id={$IN['id']}");			$std->recountGroupMembers($CONFIG['approvedgroup']);			$std->recountGroupMembers(6);  // 6 is is unapproved members group			$this->output .= GETLANG("users_approved") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=unapproved'>" . GETLANG("backto") . " " . GETLANG("nav_unapproved") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			return;		}		$userlist = $guser->getAllUsers("{$guser->db_name}, {$guser->db_email}", "", false, "WHERE `{$guser->db_level}`='6'");		$this->output .= new_table();		$this->output .= new_row(-1, "acptablesubhead");		$this->output .= GETLANG("username");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("email") . "</div>";		$this->output .= new_col();		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= "&nbsp;";		foreach ($userlist as $u) {			$mid = $u[$guser->db_id];			$this->output .= new_row();			$this->output .= $u[$guser->db_name];			$this->output .= new_col();			$this->output .= "<div align='center'>";			$this->output .= $u[$guser->db_email];			$this->output .= "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=unapproved&amp;id={$mid}'>" . GETLANG("approve") . "</a> ]" . "</div>";			$this->output .= new_col();			$this->output .= "<div align='center'>" . "[ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=deletemember&amp;id={$mid}'>" . GETLANG("delete") . "</a> ]" . "</div>";		}		$this->output .= end_table();		$this->output .= admin_foot();	}	function users_editGroupForm($data = "")	{		global $CONFIG, $std, $sid, $guser, $modules;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_groups"));		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=groups' name='editgroup'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("general");		$this->output .= new_row();		$this->output .= GETLANG("groupname") . ": ";		$this->output .= new_col();		if ($CONFIG["usertype"] == USER_DEFAULT)			$this->output .= "<input name='name' type='text' size='30' value='" . $data[$guser->db_g_title] . "'> ";		else {			$this->output .= $data[$guser->db_g_title];			$this->output .= "<input name='name' type='hidden' value='{$data[$guser->db_g_title]}'>";		}		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("permissions");		$this->output .= new_row(2);		$this->output .= new_table();		$this->output .= new_row(-1, "acptableboldsub");		$this->output .= GETLANG("category");		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("candownload") . "</div>";		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("canbrowse") . "</div>";		$this->output .= new_col();		$this->output .= "<div align='center'>" . GETLANG("canupload") . "</div>";		$this->listCats($data[$guser->db_g_id]);		$this->output .= end_table();		if ($std->isUsingFullVersion()) {			$this->output .= new_row(2, "acptablesubhead");			$this->output .= GETLANG("restrictions");			$this->output .= new_row(2);			$this->output .= GETLANG("limits_thesevalues");			$this->createPermissionCheckbox("k_noRestrict", $data['permissions'] & k_noRestrict);			$this->output .= new_row();			$this->output .= GETLANG("bwlimit");			$this->output .= new_col();			$size = $data["dlLimitSize"] / 1048576;			$this->output .= "<input name='dlLimitSize' type='text' size='4' value='" . $size . "'> Mb ";			if ($data["limitSizePeriod"] == 0)				$perday = " selected";			else if ($data["limitSizePeriod"] == 1)				$perweek = " selected";			else if ($data["limitSizePeriod"] == 2)				$permonth = " selected";			else if ($data["limitSizePeriod"] == 3)				$perhour = " selected";			$this->output .= "<select name='limitSizePeriod'>                        <option value='3' $perhour>Per Hour</option>					    <option value='0' $perday>" . GETLANG("perday") . "</option>					    <option value='1' $perweek>" . GETLANG("perweek") . "</option>					    <option value='2' $permonth>" . GETLANG("permonth") . "</option>				      </select>";			$this->output .= new_row();			$this->output .= GETLANG("filelimit");			$this->output .= new_col();			$this->output .= "<input name='dlLimitFiles' type='text' size='4' value='" . $data["dlLimitFiles"] . "'> ";			if ($data["limitFilesPeriod"] == 0)				$perday2 = " selected";			else if ($data["limitFilesPeriod"] == 1)				$perweek2 = " selected";			else if ($data["limitFilesPeriod"] == 2)				$permonth2 = " selected";			else if ($data["limitFilesPeriod"] == 3)				$perhour2 = " selected";			$this->output .= "<select name='limitFilesPeriod'>                        <option value='3' $perhour2>Per Hour</option>					    <option value='0' $perday2>" . GETLANG("perday") . "</option>					    <option value='1' $perweek2>" . GETLANG("perweek") . "</option>					    <option value='2' $permonth2>" . GETLANG("permonth") . "</option>				      </select>";			$this->createPermissionCheckbox("k_resetLimits", $data['permissions'] & k_resetLimits);			$this->output .= new_row();			$this->output .= GETLANG("applylimits");			$this->output .= new_col();			$this->output .= "<input type='checkbox' name='applyLimits' value='1'>";		}		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("groupperms");		if ($std->isUsingFullVersion()) {			$this->createPermissionCheckbox("k_canSearch", $data['permissions'] & k_canSearch);			$this->createPermissionCheckbox("k_postHTML", $data['permissions'] & k_postHTML);			$this->createPermissionCheckbox("k_addComments", $data['permissions'] & k_addComments);			$this->createPermissionCheckbox("k_editComments", $data['permissions'] & k_editComments);			$this->createPermissionCheckbox("k_delComments", $data['permissions'] & k_delComments);		}		$this->createPermissionCheckbox("k_approveUL", $data['permissions'] & k_approveUL);		if ($std->isUsingFullVersion()) {			$this->createPermissionCheckbox("k_canApproveUL", $data['permissions'] & k_canApproveUL);			$this->createPermissionCheckbox("k_moderateOwn", $data['permissions'] & k_moderateOwn);			$this->createPermissionCheckbox("k_moderateAll", $data['permissions'] & k_moderateAll);			$this->createPermissionCheckbox("k_acpAccess", $data['permissions'] & k_acpAccess);			$this->createPermissionCheckbox("k_viewOffline", $data['permissions'] & k_viewOffline);			$this->createPermissionCheckbox("k_canChangeSkin", $data['permissions'] & k_canChangeSkin);			$this->createPermissionCheckbox("k_useSessionIDs", $data['permissions'] & k_useSessionIDs);		}		$this->output .= $modules->groupOptions($data);		$this->output .= end_table();		$gid = $data["geid"];		$this->output .= "<input type='hidden' name='gid' value='$gid'>";		$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("submit") . "'>		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function users_deleteGroup($id)	{		global $sid, $guser, $DB, $IN;		admin_head(GETLANG("nav_users"), GETLANG("nav_groups"));		// If confirming delete		if (!empty($IN["submit"])) {			$gid = intval($IN["gid"]);			$newgroup = intval($IN['group']);			// Move users			$result = $DB->query("SELECT * FROM `dl_users` WHERE `group` = $gid");			if ($myrow = $DB->fetch_row($result)) {				do {					$userid = $myrow["id"];					$update = array("group" => $gid);					$DB->update($update, "dl_users", "id=$newgroup");				} while ($myrow = $DB->fetch_row($result));			}			$std->recountGroupMembers($newgroup);			$DB->query("DELETE FROM dl_groups WHERE gid=$gid");			$DB->query("DELETE FROM dl_groupsextra WHERE geid=$gid");			$this->output .= GETLANG("users_groupDelete") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=groups'>" . GETLANG("backto") . " " . GETLANG("nav_groups") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Deleted group");			admin_foot();			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=delgroup'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("deletegroup");		$this->output .= new_row(2);		$this->output .= GETLANG("moveusers");		$this->output .= new_row();		$this->output .= GETLANG("group") . ": ";		$this->output .= new_col();		$this->output .= $guser->groupBox($id, "exclude");		$this->output .= end_table();		$this->output .= "<input type='hidden' name='gid' value='$id'>";		$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= "</div></form>";		admin_foot();	}	function users_userSearch()	{		global $sid, $guser, $DB, $IN;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_editusers"));		$this->users_userSearchMain("admin.php?sid=$sid&amp;area=users&amp;act=editusers");		$this->output .= admin_foot();	}	function users_userSearchMain($formurl)	{		global $sid, $std, $guser, $DB, $IN;		if (empty($IN["username"])) {			$this->output .= "<form method=POST action='{$formurl}'>";			$this->output .= new_table();			$this->output .= new_row(2, "acptablesubhead");			$this->output .= GETLANG("searchusers");			$this->output .= new_row();			$this->output .= GETLANG("username") . ": ";			$this->output .= new_col();			$this->output .= "<input name='username' type='text' size='30'> <input type='submit' name='submit' value='" . GETLANG("submit") . "'>";			$this->output .= end_table();			$this->output .= "<input type='hidden' name='gid' value='$id'>";			$this->output .= "</form>";		} else {			$un = $IN["username"];			$result = $guser->userdb->query("SELECT * FROM `{$guser->mem_table}` WHERE {$guser->db_name} LIKE '%{$un}%'");			if ($myrow = $guser->userdb->fetch_row($result)) {				$this->output .= new_table();				$this->output .= new_row(4, "acptablesubhead");				$this->output .= GETLANG("nav_editusers");				$this->output .= new_row(-1, "acptableboldsub");				$this->output .= GETLANG("username");				$this->output .= new_col();				$this->output .= GETLANG("email");				$this->output .= new_col();				$this->output .= "&nbsp;";				$this->output .= new_col();				$this->output .= "&nbsp;";				do {					$this->output .= new_row();					$this->output .= $myrow[$guser->db_name];					$this->output .= new_col();					$this->output .= $myrow[$guser->db_email];					$this->output .= new_col();					$id = $myrow[$guser->db_id];					$this->output .= "<a href='admin.php?sid=$sid&amp;area=users&amp;act=addmember&amp;id=$id'>" . GETLANG("edit") . "</a>";					$this->output .= new_col();					$this->output .= "<a href='admin.php?sid=$sid&amp;area=users&amp;act=deletemember&amp;id=$id'>" . GETLANG("delete") . "</a>";				} while ($myrow = $guser->userdb->fetch_row($result));				$this->output .= end_table();			} else {				$std->warning(GETLANG("warn_nouser"));			}		}	}	// =================================================================	// Edit Member	//      This function will add and edit members details	// =================================================================	function users_editMember()	{		global $DB, $CONFIG, $sid, $std, $guser, $modules, $IN;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_editusers"));		if ($IN["id"]) {			$id = $IN['id'];			// Ensure member already exists			$user = $guser->getOneUser("{$guser->db_id}", "", false, $IN['id']);			if (!$user) {				$std->error(GETLANG("er_edituser"));				admin_foot();				return;			}			if ($CONFIG['usertype'] == USER_DEFAULT) {				// Encrypt password				if ($IN["password"])					$password = md5($IN["password"]);				// Make the email address safe				$email = addslashes($IN["email"]);				$gid = $IN['group'];				$update = array("username" => $IN["username"],					"group" => $gid,					"email" => $email);				if ($password)					$update["password"] = $password;				$DB->update($update, "dl_users", "id=$id");				if ($IN['group'] != $IN['oldgroup']) {					$std->recountGroupMembers($IN['group']);					$std->recountGroupMembers($IN['oldgroup']);				}			}			if ($IN['group'] != $IN['oldgroup']) {				$DB->query("SELECT * FROM `dl_groupsextra` WHERE geid='{$IN['group']}'");				$myrow = $DB->fetch_row();				if (!$myrow) {					$std->error(GETLANG("er_nogroup"));					return;				}				// Extra info				$update = array("dlLimitSize" => $myrow['dlLimitSize'],					"dlLimitFiles" => $myrow['dlLimitFiles'],					"limitSizePeriod" => $myrow['limitSizePeriod'],					"limitFilesPeriod" => $myrow['limitFilesPeriod'],					"skin" => $IN['skinchoice'],					"lang" => $IN['langchoice']);				$guser->updateMemberExtra("`{$guser->db_id}`='$id'", "`mid`='{$id}'");				$DB->update($update, "dl_memberextra", "mid=$id");			} else {				// Add limit values				$gid = $IN["group"];				$id = $IN["id"];				// Extra info				$update = array("dlLimitSize" => $IN["dlLimitSize"],					"dlLimitFiles" => $IN["dlLimitFiles"],					"limitSizePeriod" => $IN["limitSizePeriod"],					"limitFilesPeriod" => $IN["limitFilesPeriod"],					"skin" => $IN['skinchoice'],					"lang" => $IN['langchoice']);				$guser->updateMemberExtra("`{$guser->db_id}`='$id'", "`mid`='{$id}'");				$update = array_merge($update, $modules->saveUserData($IN));				$DB->update($update, "dl_memberextra", "mid=$id");			}			$this->output .= GETLANG("useredited") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=addmember&amp;id=$id'>" . GETLANG("backto") . " " . GETLANG("nav_editusers") . " " . $IN["username"] . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=addmember'>" . GETLANG("backto") . " " . GETLANG("nav_adduser") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Edited member '{$IN['username']}'");		} else {			// Ensure a password was entered			if ($IN["password"] == "") {				$std->error(GETLANG("er_nopass"));				admin_foot();				return;			}			// Ensure member doesn't already exist with that username			$result = $DB->query("SELECT * FROM `{$guser->mem_table}` WHERE {$guser->db_name}='$IN[username]'");			if ($myrow = $DB->fetch_row($result)) {				$std->error(GETLANG("er_dupUsers"));				admin_foot();				return;			}			// Encrypt password			$password = md5($IN["password"]);			// Add limit values			$gid = $IN["group"];			$result = $guser->userdb->query("SELECT g.*,ge.*											FROM `{$guser->mem_gtable}` g											LEFT JOIN `dl_groupsextra` ge ON (ge.geid=$gid)											WHERE g.{$guser->db_g_id}=$gid");			$myrow = $guser->userdb->fetch_row($result);			$timenow = time();			// Set the file expiry time			if ($myrow["limitFilesPeriod"] == 0)       // Per day				$files_time = $timenow + 86400;			else if ($myrow["limitFilesPeriod"] == 1) // Per week				$files_time = $timenow + 604800;			else if ($myrow["limitFilesPeriod"] == 2) // Per month				$files_time = $timenow + 2419200;			else if ($myrow["limitFilesPeriod"] == 3) // Per hour				$files_time = $timenow + 3600;			// Set the file limit			$files = $myrow["dlLimitFiles"];			// Set the bandwidth expiry time			if ($myrow["limitSizePeriod"] == 0)       // Per day				$bandwidth_time = $timenow + 86400;			else if ($myrow["limitSizePeriod"] == 1) // Per week				$bandwidth_time = $timenow + 604800;			else if ($myrow["limitSizePeriod"] == 2) // Per month				$bandwidth_time = $timenow + 2419200;			else if ($myrow["limitSizePeriod"] == 3) // Per hour				$files_time = $timenow + 3600;			// Set the file limit			$bandwidth = $myrow["dlLimitSize"];			// Make the email address safe			$email = addslashes($IN["email"]);			$insert = array("username" => $IN["username"],				"password" => $password,				"group" => $gid,				"email" => $email);			$DB->insert($insert, "dl_users");			$uid = $DB->insert_id();			$std->recountGroupMembers($gid);			// Extra info			$insert = array("mid" => $uid,				"dlLimitSize" => $bandwidth,				"dlLimitFiles" => $files,				"limitSizePeriod" => $bandwidth_time,				"limitFilesPeriod" => $files_time);			$DB->insert($insert, "dl_memberextra");			$this->output .= GETLANG("newusernoconfirm") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=editusers'>" . GETLANG("backto") . " " . GETLANG("nav_editusers") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=addmember'>" . GETLANG("backto") . " " . GETLANG("nav_adduser") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Added new user '{$IN['username']}'");		}		$this->output .= admin_foot();	}	// Display the form for editting and adding members	function users_editMemberForm($id = "")	{		global $DB, $sid, $std, $guser, $modules, $CONFIG;		if ($id) {			//$this->output .=Array($guser);			$newUser = $guser->getOneUser("*", "*", true, $id);			//$newUser = $guser->getAllUsers("WHERE `{$guser->db_id}`='$id'", "WHERE `mid`='$id'" );			if (!$newUser)				$std->error(GETLANG("er_useredit"));			//$userGroup = $guser->getSingleGroup($newUser[$id][$guser->db_level]);			//if ( !$userGroup )			//	$std->error(GETLANG("er_nogroup"));			$guser->updateMemberExtra("`{$guser->db_id}`='$id'", "`mid`='$id'");			$data = $std->updateLimits($newUser, 1);		}		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_editusers"));		$data = $newUser;		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=editmember'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("userdetails");		if ($CONFIG['usertype'] == USER_DEFAULT) {			$this->output .= new_row();			$this->output .= GETLANG("username") . ": ";			$this->output .= new_col();			$this->output .= "<input name='username' type='text' size='30' value='" . $data[$guser->db_name] . "'>";			$this->output .= new_row();			$this->output .= GETLANG("email") . ": ";			$this->output .= new_col();			$this->output .= "<input name='email' type='text' size='30' value='" . $data[$guser->db_email] . "'>";			$this->output .= new_row();			$this->output .= GETLANG("group") . ": ";			$this->output .= new_col();			$this->output .= $guser->groupBox($data[$guser->db_level]);			if ($id and $std->isUsingFullVersion()) {				$this->output .= new_row();				$this->output .= GETLANG("regkey") . ": ";				$this->output .= new_col();				$this->output .= "<input name='regKey' type='text' size='30' value='$data[regKey]'>";			}			$this->output .= new_row();			$this->output .= GETLANG("password") . ": ";			$this->output .= new_col();			$this->output .= "<input name='password' type='password' size='30' value=''>";		} else {			$this->output .= "<input type='hidden' name='group' value='{$data[$guser->db_level]}'>";			$this->output .= new_row(2);			$this->output .= GETLANG("ext_warn");			$this->output .= new_row();			$this->output .= GETLANG("username") . ": ";			$this->output .= new_col();			$this->output .= $data[$guser->db_name];			$this->output .= "<input name='username' type='hidden' value='{$data[$guser->db_name]}'>";		}		if ($id) {			if ($std->isUsingFullVersion()) {				$this->output .= new_row(2, "acptablesubhead");				$this->output .= GETLANG("restrict");				$this->output .= new_row(2);				$this->output .= GETLANG("limit_desc");				$this->output .= new_row();				$this->output .= GETLANG("bw_left") . ": ";				$this->output .= new_col();				$this->output .= "<input name='dlLimitSize' type='text' size='30' value='{$data['dlLimitSize']}'> bytes";				$this->output .= new_row();				$this->output .= GETLANG("time_left") . ": ";				$this->output .= new_col();				$time = time() - $data["limitSizePeriod"];				$timeArray = $std->calc_time($time);				$this->output .= "<input name='limitSizePeriod' type='hidden' value='{$data['limitSizePeriod']}'>";				$this->output .= "$timeArray[days] " . GETLANG("days") . ", $timeArray[hours] " . GETLANG("hours") . ", $timeArray[minutes] " . GETLANG("minutes");				$this->output .= new_row();				$this->output .= GETLANG("files_left") . ": ";				$this->output .= new_col();				$this->output .= "<input name='dlLimitFiles' type='text' size='5' value='{$data['dlLimitFiles']}'>";				$this->output .= new_row();				$this->output .= GETLANG("time_left") . ": ";				$this->output .= new_col();				$time = time() - $data["limitFilesPeriod"];				$timeArray = $std->calc_time($time);				$this->output .= "<input name='limitFilesPeriod' type='hidden' value='{$data['limitFilesPeriod']}'>";				$this->output .= "$timeArray[days] " . GETLANG("days") . ", $timeArray[hours] " . GETLANG("hours") . ", $timeArray[minutes] " . GETLANG("minutes");				if ($CONFIG['usertype'] == USER_DEFAULT) {					$this->output .= new_row(2, "acptablesubhead");					$this->output .= GETLANG("iplogging");					$this->output .= new_row();					$this->output .= GETLANG("ipregister") . ": ";					$this->output .= new_col();					$this->output .= $data['regIP'];					$this->output .= new_row();					$this->output .= GETLANG("recentips") . ": ";					$this->output .= new_col();					$ips = explode("|", $data['iplog']);					foreach ($ips as $ip) {						$this->output .= $ip . "<br>";					}				}				$this->output .= new_row(2, "acptablesubhead");				$this->output .= GETLANG("userprefs");				$this->output .= new_row();				$this->output .= GETLANG("skinchoice") . ": ";				$this->output .= new_col();				$this->output .= $std->skinListBox($data["skin"]);				$this->output .= new_row();				$this->output .= GETLANG("language") . ": ";				$this->output .= new_col();				$this->output .= $std->langListBox($data["lang"]);			}			$this->output .= new_row(2, "acptablesubhead");			$this->output .= GETLANG("userstats");			$this->output .= new_row();			$this->output .= GETLANG("downloaded") . ": ";			$this->output .= new_col();			$this->output .= "<a href='admin.php?sid=$sid&amp;area=logs&amp;act=userdownloads&amp;id={$id}'>{$data['downloaded']} " . GETLANG("files") . "</a>";			$this->output .= new_row();			$this->output .= GETLANG("uploaded") . ": ";			$this->output .= new_col();			$this->output .= $data['uploaded'] . " " . GETLANG("files");			$this->output .= new_row();			$this->output .= GETLANG("lastlogin") . ": ";			$this->output .= new_col();			$this->output .= $std->formatDate($data['lastLogin']);		}		$this->output .= end_table();		$this->output .= $modules->userOptions($data);		$this->output .= "<input type='hidden' name='id' value='$id'>";		$this->output .= "<input type='hidden' name='oldgroup' value='{$data[$guser->db_level]}'>";		$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("submit") . "'>		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function users_deleteUser()	{		global $sid, $std, $DB, $IN, $CONFIG;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_users"));		$id = $IN["id"];		if (!empty($IN["cancel"])) {			$this->output .= GETLANG("users_userDeleteCancel") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=editmember&amp;id={$IN[id]}'>" . GETLANG("backto") . " " . GETLANG("nav_editusers") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=editusers'>" . GETLANG("backto") . " " . GETLANG("nav_users") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			return;		}		// If confirming delete		if (!empty($IN["submit"])) {			if ($id == 1) {				$std->error(GETLANG("er_deletegod"));			} else {				$DB->query("SELECT `group` FROM `dl_users` WHERE `id`='{$id}'");				$myrow = $DB->fetch_row();				$DB->query("DELETE FROM dl_users WHERE id=$id");				$DB->query("DELETE FROM dl_memberextra WHERE mid=$id");				$std->recountGroupMembers($myrow['group']);				$this->output .= GETLANG("users_userDelete") . "<br>";			}			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=editusers'>" . GETLANG("backto") . " " . GETLANG("nav_users") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Deleted group");			$this->output .= admin_foot();			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=deletemember'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("deleteuser");		$this->output .= new_row(2);		$this->output .= GETLANG("confirmdeleteuser");		$this->output .= end_table();		$this->output .= "<input type='hidden' name='id' value='$id'>";		$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("yes") . "'> <input type='submit' name='cancel' value='" . GETLANG("no") . "'>";		$this->output .= "</div></form>";		$this->output .= admin_foot();	}	function users_customDB()	{		global $sid, $std, $rwdInfo, $guser, $DB, $IN, $CONFIG;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_editdb"));		if ($IN["submit"]) {			if ($CONFIG["usertype"] == $IN["database"]) {				$this->output .= GETLANG("changedbplonker") . "<br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=customdb'>" . GETLANG("backto") . " " . GETLANG("nav_customdb") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				admin_foot();				return;			}			if ($IN['sqlhost'] and $IN['sqltable']) {				$CONFIG['userhost'] = $IN['sqlhost'];				$CONFIG['usertable'] = $IN['sqltable'];				$CONFIG['useruser'] = $IN['sqluser'];				$CONFIG['userpass'] = $IN['sqlpass'];				$CONFIG['userprefix'] = $IN['sqlprefix'];				$CONFIG['usermode'] = "manual";			} else {				$CONFIG["userfilepath"] = $IN["dbpath"];				$CONFIG["userfileurl"] = $IN["dburl"];				$CONFIG['usermode'] = "auto";			}			$CONFIG["usertype"] = $IN["database"];			$newuser = new user();			$newuser->initialise();			if (!$newuser || !$newuser->userdb) {				$std->error(GETLANG("er_noExtDB"));				return;			}			$table = $newuser->mem_gtable;			$sql = "SELECT * FROM $table";			$newuser->userdb->query($sql);			$this->output .= GETLANG("external_setup_warning");			$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=savecustomdb'>";			$this->output .= new_table(-1, "acptablesubhead");			$this->output .= "<div align='left'><strong>" . GETLANG("userlevel") . "</strong></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><strong>" . GETLANG("admin") . "</strong></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><strong>" . GETLANG("moderator") . "</strong></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><strong>" . GETLANG("guest") . "</strong></div>";			$this->output .= new_col();			$this->output .= "<div align='center'><strong>" . GETLANG("neither") . "</strong></div>";			if ($IN['database'] == "smf" || $IN['database'] == "smf2") {				$this->output .= new_row(-1, "normalrow");				$this->output .= "Unregistered Member";				$this->output .= new_col();				$this->output .= "<div align='center'></div>";				$this->output .= new_col();				$this->output .= "<div align='center'></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='radio' name='-1' value='3' checked></div>";				$this->output .= new_col();				$this->output .= "<div align='center'></div>";			}			while ($myrow = $newuser->userdb->fetch_row()) {				$this->output .= new_row(-1, "normalrow");				$this->output .= $myrow[$newuser->db_g_title];				$this->output .= new_col();				$this->output .= "<div align='center'><input type='radio' name='" . $myrow[$newuser->db_g_id] . "' value='1'></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='radio' name='" . $myrow[$newuser->db_g_id] . "' value='2'></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='radio' name='" . $myrow[$newuser->db_g_id] . "' value='3'></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='radio' name='" . $myrow[$newuser->db_g_id] . "' value='4' checked></div>";			}			$this->output .= end_table();			$this->output .= "<input type='hidden' name='database' value='$IN[database]'>				  <input type='hidden' name='dbpath' value='$IN[dbpath]'>				  <input type='hidden' name='dburl' value='$IN[dburl]'>                  <input type='hidden' name='sqlhost' value='{$IN['sqlhost']}'>                  <input type='hidden' name='sqltable' value='{$IN['sqltable']}'>                  <input type='hidden' name='sqluser' value='{$IN['sqluser']}'>                  <input type='hidden' name='sqlpass' value='{$IN['sqlpass']}'>                  <input type='hidden' name='sqlprefix' value='{$IN['sqlprefix']}'>                  ";			$this->output .= "<div align='center'><input type='submit' name='submit' value='" . GETLANG("submit") . "'></div>";			$this->output .= "</form>";			$this->output .= admin_foot();			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=customdb'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("selectuserdb");		$this->output .= new_row();		$this->output .= GETLANG("database");		$this->output .= new_col();		$this->output .= "<select name='database'>";		$this->output .= "<option value='{$CONFIG['usertype']}' selected>";		$this->output .= "{$guser->usertype->name}</option>";		$handle = opendir($rwdInfo->path . "/engine/userdb/");		while (($filename = readdir($handle)) !== false) {			if (($filename != ".") and ($filename != "..")) {				if (preg_match("/\.php$/", $filename)) {					$short = $std->strip_ext($filename);					if ($short == $CONFIG["usertype"])						continue;					$this->output .= "<option value='{$short}'";					include_once($rwdInfo->path . "/engine/userdb/" . $filename);					$this->output .= ">{$udbload->name}</option>";				}			}		}		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("udb_autoconfig");		$this->output .= new_row(2);		$this->output .= GETLANG("udbnotice");		$this->output .= new_row();		$this->output .= GETLANG("forumpath") . ": ";		$this->output .= new_col();		$this->output .= "<input name='dbpath' type='text' size='50' value='{$rwdInfo->path}'>";		$this->output .= new_row();		$this->output .= GETLANG("forumurl") . ": ";		$this->output .= new_col();		$this->output .= "<input name='dburl' type='text' size='50' value='{$rwdInfo->url}'>";		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("udb_manconfig");		$this->output .= new_row(2);		$this->output .= GETLANG("udbnotice_manual");		$this->output .= new_row();		$this->output .= GETLANG("sqlhost") . ": ";		$this->output .= new_col();		$this->output .= "<input name='sqlhost' type='text' size='50'>";		$this->output .= new_row();		$this->output .= GETLANG("sqltable") . ": ";		$this->output .= new_col();		$this->output .= "<input name='sqltable' type='text' size='50'>";		$this->output .= new_row();		$this->output .= GETLANG("sqluser") . ": ";		$this->output .= new_col();		$this->output .= "<input name='sqluser' type='text' size='50'>";		$this->output .= new_row();		$this->output .= GETLANG("sqlpass") . ": ";		$this->output .= new_col();		$this->output .= "<input name='sqlpass' type='password' size='50'>";		$this->output .= new_row();		$this->output .= GETLANG("sqlprefix") . ": ";		$this->output .= new_col();		$this->output .= "<input name='sqlprefix' type='text' size='50'>";		$this->output .= new_row();		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= "<input type='submit' name='submit' value='" . GETLANG("submit") . "'>";		$this->output .= end_table();		$this->output .= "</form>";		$this->output .= admin_foot();	}	function users_saveCustomDB()	{		global $IN, $DB, $CONFIG, $sid, $guser, $std;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_editdb"));		$newconfig = array();		if ($IN['sqlhost'] and $IN['sqltable']) {			$newconfig['userhost'] = $IN['sqlhost'];			$newconfig['usertable'] = $IN['sqltable'];			$newconfig['useruser'] = $IN['sqluser'];			$newconfig['userpass'] = $IN['sqlpass'];			$newconfig['userprefix'] = $IN['sqlprefix'];			$newconfig['usermode'] = "manual";		} else {			$newconfig['usermode'] = "auto";			$newconfig["userfilepath"] = $IN["dbpath"];			$newconfig["userfileurl"] = $IN["dburl"];			// Empty these anyway in case they are set from a previous database			$newconfig['userhost'] = "";			$newconfig['usertable'] = "";			$newconfig['useruser'] = "";			$newconfig['userpass'] = "";			$newconfig['userprefix'] = "";		}		$newconfig["usertype"] = $IN["database"];		$newuser = new user();		$newuser->initialise();		if (!$newuser || !$newuser->userdb) {			$std->error(GETLANG("er_noExtDB"));			return;		}		$table = $newuser->mem_gtable;		$sql = "SELECT * FROM $table";		$groups = $newuser->userdb->query($sql);		$catCanBrowse = array();		$catCanUL = array();		$catCanDL = array();		$groupData = array();		$numAdmins = 0;		$numGuests = 0;		$defaultFlags = (k_canSearch | k_noRestrict | k_addComments | k_useSessionIDs);		while ($myrow = $newuser->userdb->fetch_row($groups)) {			//$this->output .=Array($myrow);			$cats = $DB->query("SELECT * FROM dl_categories");			while ($catrow = $newuser->userdb->fetch_row($cats)) {				$catCanBrowse[$catrow["cid"]] .= $myrow[$newuser->db_g_id] . "|";				$catCanUL[$catrow["cid"]] .= $myrow[$newuser->db_g_id] . "|";				$catCanDL[$catrow["cid"]] .= $myrow[$newuser->db_g_id] . "|";			}			if ($IN[$myrow[$newuser->db_g_id]] == 1)   // Admin			{				$groupData[$myrow[$newuser->db_g_id]]["geid"] = $myrow[$newuser->db_g_id];				$groupData[$myrow[$newuser->db_g_id]]["permissions"] = ($defaultFlags | k_moderateAll | k_moderateOwn | k_canChangeSkin | k_acpAccess);				$groupData[$myrow[$newuser->db_g_id]]["uploadType"] = 1;				$groupData[$myrow[$newuser->db_g_id]]["limitFilesPeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitFiles"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["limitSizePeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitSize"] = 0;				$numAdmins++;			}			if ($IN[$myrow[$newuser->db_g_id]] == 2)   // Moderator			{				$groupData[$myrow[$newuser->db_g_id]]["geid"] = $myrow[$newuser->db_g_id];				$groupData[$myrow[$newuser->db_g_id]]["permissions"] = ($defaultFlags | k_moderateAll | k_moderateOwn | k_canChangeSkin);				$groupData[$myrow[$newuser->db_g_id]]["uploadType"] = 1;				$groupData[$myrow[$newuser->db_g_id]]["limitFilesPeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitFiles"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["limitSizePeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitSize"] = 0;			}			if ($IN[$myrow[$newuser->db_g_id]] == 3)   // Guest			{				$groupData[$myrow[$newuser->db_g_id]]["geid"] = $myrow[$newuser->db_g_id];				$groupData[$myrow[$newuser->db_g_id]]["permissions"] = ($defaultFlags | k_approveUL);				$groupData[$myrow[$newuser->db_g_id]]["uploadType"] = 1;				$groupData[$myrow[$newuser->db_g_id]]["limitFilesPeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitFiles"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["limitSizePeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitSize"] = 0;				$numGuests++;				if ($numGuests > 1) {					$std->error(GETLANG("too_many_guests"));					return;				}				$newconfig['guestid'] = $myrow[$newuser->db_g_id];			}			if ($IN[$myrow[$newuser->db_g_id]] == 4)   // Member			{				$groupData[$myrow[$newuser->db_g_id]]["geid"] = $myrow[$newuser->db_g_id];				$groupData[$myrow[$newuser->db_g_id]]["permissions"] = ($defaultFlags | k_moderateOwn | k_approveUL | k_canChangeSkin);				$groupData[$myrow[$newuser->db_g_id]]["uploadType"] = 1;				$groupData[$myrow[$newuser->db_g_id]]["limitFilesPeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitFiles"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["limitSizePeriod"] = 0;				$groupData[$myrow[$newuser->db_g_id]]["dlLimitSize"] = 0;			}		}		if ($numAdmins < 1) {			$std->error(GETLANG("no_admins"));			return;		}		if ($IN['database'] == "smf" || $IN['database'] == "smf2") {			$newconfig['guestid'] = -1;			$numGuests = 1;		} else if ($numGuests < 1) {			$std->error(GETLANG("no_guests"));			return;		}		if ($IN['database'] != "rwd4") {			$newconfig['guestref'] = -1;		} else {			$DB->query("SELECT id FROM dl_users WHERE `group`='5'");			$myrow = $DB->fetch_row();			$newconfig['guestref'] = $myrow['id'];		}		foreach ($catCanBrowse as $i => $d) {			$update = array("canBrowse" => $d,				"canUL" => $catCanUL[$i],				"canDL" => $catCanDL[$i]);			$DB->update($update, "dl_categories", "cid=$i");		}		$DB->query("TRUNCATE dl_groupsextra");		$DB->query("TRUNCATE dl_memberextra");		foreach ($groupData as $group) {			$DB->insert($group, "dl_groupsextra");		}		$std->saveChangedDBConfig($newconfig);		// Far from efficient but if we don't do it seperate we could have the same data in the DB twice		foreach ($groupData as $group) {			$newuser->updateMemberExtra("`{$newuser->db_level}`='{$group['gid']}'", "`gid`='{$group['gid']}'");		}		$this->output .= GETLANG("userdbsetup");		$this->output .= "<br><br>+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=customdb'>" . GETLANG("backto") . " " . GETLANG("editdb") . " " . $IN["username"] . "</a><br>";		$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";		$std->addAdminLog("Changed external DB to {$IN['database']}");		$this->output .= admin_foot();	}	function users_newsletter()	{		global $IN, $DB, $sid, $std, $guser;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_emailusers"));		if ($IN["submitemail"]) {			require_once(ROOT_PATH . "/engine/mime/htmlMimeMail.php");			if (empty($IN["group"])) {				$std->error(GETLANG("er_nogroups"));				$this->output .= admin_foot();				return;			}			$where = "WHERE (";			foreach ($IN["group"] as $g) {				$groups[] = "`" . $guser->db_level . "`=" . $g . " ";			}			$where .= implode("OR ", $groups);			$where .= ")";			$users = $guser->getAllUsers("{$guser->db_name}, {$guser->db_email}", "receive_email", true, $where);			$counter = 0;			foreach ($users as $u) {				if ($IN["honour"] and $u['receive_email'])					continue;				if ($u[$guser->db_email]) {					$this->output .= "Emailing " . $u[$guser->db_name] . "<br>";					$mail = new htmlMimeMail();					$text = $IN["content"];					$mail->setText($text);					$mail->setReturnPath($IN["email"]);					$from = $CONFIG["email"];					$mail->setFrom($from);					$mail->setSubject($IN["subject"]);					$mail->setHeader('RW::Scripts', 'RW::Download');					$result = $mail->send(array($IN["remail"]), $CONFIG['mailtype']);					$this->output .= $result . "<br>";					$counter++;				}			}			if ($counter == 0) {				$std->error(GETLANG("er_noemail"));				$this->output .= admin_foot();				return;			}			$this->output .= sprintf(GETLANG("emailsent") . "<br>", $counter);			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=newsletter'>" . GETLANG("backto") . " " . GETLANG("nav_emailusers") . " " . $IN["username"] . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Sent mass email");			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=newsletter'>";		$this->output .= new_table();		$this->output .= GETLANG("emailsubject") . ":";		$this->output .= new_col();		$this->output .= "<input type='text' size='60' maxsize='250' style='width:100%' name='subject' value=''>";		$this->output .= new_row();		$this->output .= GETLANG("emailcontent") . ":";		$this->output .= new_col();		$this->output .= "<textarea cols='60' rows='20' name='content' style='width:100%'></textarea>";		$this->output .= new_row();		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= new_table(2);		$this->output .= new_row(-1, "", "", "50%");		$this->users_groupList();		$this->output .= new_col();		$this->output .= new_table(-1, "", "", "100%", "", 0);		$this->output .= "<input type='checkbox' name='honour' value='1' checked>";		$this->output .= new_col();		$this->output .= GETLANG("honouremail");		$this->output .= new_row();		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= "<input type='submit' name='submitemail' value='" . GETLANG("sendemail") . "'>";		$this->output .= end_table();		$this->output .= end_table();		$this->output .= end_table();		$this->output .= "</form>";		$this->output .= admin_foot();	}	function users_editModerator()	{		global $IN, $DB, $OUTPUT, $sid, $std, $guser;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_moderators"));		// Member confirmed		if ($IN['save']) {			$added = 0;			$cats = explode("|", $IN['cats']);			if ($IN['edit']) {				$update = array("canedit" => $IN['editdl'],					"canmove" => $IN['movedl'],					"candelete" => $IN['deletedl'],					"edit_comments" => $IN['editcomment'],					"del_comments" => $IN['delcomment']);				$DB->update($update, "dl_moderators", "mid={$IN['id']}");				$this->output .= GETLANG("mod_edited") . "<br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=moderators'>" . GETLANG("backto") . " " . GETLANG("nav_moderators") . "</a><br>";				$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				$std->addAdminLog("Editted moderators");			} else {				foreach ($cats as $cid) {					// Check user isnt already a moderator here					$DB->query("SELECT * FROM dl_moderators WHERE member_id={$IN['id']} AND catid={$cid}");					if (!$myrow = $DB->fetch_row()) {						$newUser = $guser->getOneUser("{$guser->db_name}", "", false, $IN['id']);						$insert = array("catid" => $cid,							"member_name" => $newUser[$IN['id']][$guser->db_name],							"member_id" => $IN['id'],							"canedit" => $IN['editdl'],							"canmove" => $IN['movedl'],							"candelete" => $IN['deletedl'],							"edit_comments" => $IN['editcomment'],							"del_comments" => $IN['delcomment']);						$DB->insert($insert, "dl_moderators");						$added++;					}				}				// YOU WALLY!				if ($added == 0)					$std->error(GETLANG("er_useralreadymod"));				else {					$this->output .= GETLANG("mod_added") . "<br>";					$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=moderators'>" . GETLANG("backto") . " " . GETLANG("nav_moderators") . "</a><br>";					$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";				}			}			$this->output .= admin_foot();			return;		}		if ($IN['edit']) {			$DB->query("SELECT * FROM `dl_moderators` WHERE `mid`='{$IN['id']}'");			$data = $DB->fetch_row();		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=editmods'>";		$this->output .= new_table();		$this->output .= new_row(2, "acptablesubhead");		$this->output .= GETLANG("modpowers");		$this->output .= new_row();		$this->output .= GETLANG("caneditdl");		$this->output .= new_col();		$data['canedit'] ? $editdl = "checked" : $editdl = "";		$this->output .= "<input type='checkbox' name='editdl' value='1' $editdl>";		$this->output .= new_row();		$this->output .= GETLANG("canmovedl");		$this->output .= new_col();		$data['canmove'] ? $movedl = "checked" : $movedl = "";		$this->output .= "<input type='checkbox' name='movedl' value='1' $movedl>";		$this->output .= new_row();		$this->output .= GETLANG("candeldl");		$this->output .= new_col();		$data['candelete'] ? $deletedl = "checked" : $deletedl = "";		$this->output .= "<input type='checkbox' name='deletedl' value='1' $deletedl>";		$this->output .= new_row();		$this->output .= GETLANG("caneditcom");		$this->output .= new_col();		$data['edit_comments'] ? $editcomment = "checked" : $editcomment = "";		$this->output .= "<input type='checkbox' name='editcomment' value='1' $editcomment>";		$this->output .= new_row();		$this->output .= GETLANG("candelcom");		$this->output .= new_col();		$data['del_comments'] ? $delcomment = "checked" : $delcomment = "";		$this->output .= "<input type='checkbox' name='delcomment' value='1' $delcomment>";		$this->output .= end_table();		$this->output .= "<input type='hidden' name='cats' value='{$IN['cats']}'>";		$this->output .= "<input type='hidden' name='id' value='{$IN['id']}'>";		$this->output .= "<input type='hidden' name='edit' value='{$IN['edit']}'>";		$this->output .= "<div align='center'><input type='submit' name='save' value='" . GETLANG("save") . "'></div></form>";		$this->output .= admin_foot();	}	function users_deleteModerator()	{		global $IN, $DB, $sid, $std, $guser;		$this->output .= admin_head(GETLANG("nav_files"), GETLANG("nav_moderators"));		if ($IN["confirm"]) {			$DB->query("DELETE FROM `dl_moderators` WHERE `catid`='{$IN['cid']}' AND `member_id`='{$IN['uid']}'");			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=moderators'>" . GETLANG("backto") . " " . GETLANG("nav_moderators") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$std->addAdminLog("Removed moderator");		} else if ($IN["cancel"]) {			$this->output .= GETLANG("delcancel") . "<br><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=users&amp;act=moderators'>" . GETLANG("backto") . " " . GETLANG("nav_moderators") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";		} else {			$std->warning(GETLANG("warn_delmod") . "<p>"				. "<form method='post' action='admin.php?sid=$sid&amp;area=users&amp;act=deletemod'>"				. "<input type='hidden' name='uid' value='{$IN['uid']}'>"				. "<input type='hidden' name='cid' value='{$IN['cid']}'>"				. "<input type='Submit' name='confirm' value='" . GETLANG("yes") . "'> <input type='Submit' name='cancel' value='" . GETLANG("no") . "'> </form>");		}		$this->output .= admin_foot();	}	function users_moderators()	{		global $IN, $DB, $sid, $std, $guser;		$this->output .= admin_head(GETLANG("nav_users"), GETLANG("nav_moderators"));		// Member has been searched for		if ($IN['submit']) {			$un = $IN["username"];			$result = $guser->userdb->query("SELECT * FROM `{$guser->mem_table}` WHERE {$guser->db_name} LIKE '%{$un}%'");			if ($myrow = $guser->userdb->fetch_row($result)) {				$this->output .= new_table();				$this->output .= new_row(3, "acptablesubhead");				$this->output .= GETLANG("nav_editusers");				$this->output .= new_row(-1, "acptableboldsub");				$this->output .= GETLANG("username");				$this->output .= new_col();				$this->output .= GETLANG("email");				$this->output .= new_col();				$this->output .= "&nbsp;";				do {					$this->output .= new_row();					$this->output .= $myrow[$guser->db_name];					$this->output .= new_col();					$this->output .= $myrow[$guser->db_email];					$this->output .= new_col();					$id = $myrow[$guser->db_id];					$this->output .= "<a href='admin.php?sid=$sid&amp;area=users&amp;act=editmods&amp;id=$id&amp;cats={$IN['cats']}'>" . GETLANG("select") . "</a>";				} while ($myrow = $guser->userdb->fetch_row($result));				$this->output .= end_table();			} else {				$std->warning(GETLANG("warn_nouser"));			}			$this->output .= admin_foot();			return;		}		if ($IN['setcat']) {			if (empty($IN['cats'])) {				$std->error(GETLANG("er_nocat"));				return;			}			$cats = implode("|", $IN['cats']);			$this->users_userSearchMain("admin.php?sid=$sid&amp;area=users&amp;act=moderators&amp;cats={$cats}");			$this->output .= admin_foot();			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=users&amp;act=moderators'>";		$this->moderationCats();		$this->output .= "<div align='center'><input type='submit' name='setcat' value='" . GETLANG("add_mod") . "'></div></form>";		$this->output .= admin_foot();	}	function users_groupList()	{		global $DB, $guser, $std;		// Get groups from database		$result = $guser->userdb->query("SELECT {$guser->db_g_id}, {$guser->db_g_title} FROM {$guser->mem_gtable} ORDER BY {$guser->db_g_title} ASC");		if ($myrow = $guser->userdb->fetch_row($result)) {			$this->output .= new_table(-1, "", "", "100%", "", 0);			do {				if ($myrow[$guser->db_g_id] != 1 and $std->isUsingFullVersion()) {					$this->output .= new_row(-1, "", "", "30");					$this->output .= "<input type='checkbox' name='group[]' value='{$myrow[$guser->db_g_id]}'>";					$this->output .= new_col();					$this->output .= $myrow[$guser->db_g_title];				}			} while ($myrow = $guser->userdb->fetch_row($result));			$this->output .= end_table();		}	}	function moderationCats()	{		global $DB, $sid, $std, $guser;		$arrayIdx = 0;		$res = $DB->query("SELECT * FROM dl_categories");		$modres = $DB->query("SELECT * FROM dl_moderators");		$allusers = $guser->getAllUsers($guser->db_name);		$navclass = array();		if ($myrow = $DB->fetch_row($res)) {			$counter = 0;			do {				$navclass[$counter]->catName = $myrow["name"];				$navclass[$counter]->catID = $myrow["cid"];				$navclass[$counter]->parentID = $myrow["parentid"];				$counter++;			} while ($myrow = $DB->fetch_row($res));		} else			return;		$counter = 0;		$modclass = array();		while ($modrow = $DB->fetch_row($modres)) {			$modclass[$counter]->modID = $modrow["mid"];			$modclass[$counter]->catID = $modrow['catid'];			$modclass[$counter]->moderator = $allusers[$modrow['member_id']][$guser->db_name];			$modclass[$counter]->mid = $modrow["member_id"];			$counter++;		}		$this->output .= new_table();		$this->output .= new_row(-1, "acptablesubhead", "", "20");		$this->output .= "&nbsp;";		$this->output .= new_col();		$this->output .= GETLANG("category");		$this->output .= new_col();		$this->output .= GETLANG("moderator");		for ($i = 0; $i < count($navclass); $i++) {			if ($navclass[$i]->parentID == 0) {				$this->output .= new_row();				$this->output .= "<div align='center'><input type='checkbox' name='cats[{$navclass[$i]->catID}]' value='{$navclass[$i]->catID}'></div>";				$this->output .= new_col();				$this->output .= $navclass[$i]->catName;				$this->output .= new_col();				foreach ($modclass as $mod) {					if ($mod->catID == $navclass[$i]->catID)						$this->output .= $mod->moderator . " [ <a href='admin.php?sid=$sid&amp;area=users&amp;act=editmods&amp;id={$mod->modID}&amp;edit=1'>" . GETLANG("edit") . "</a> ] [ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=deletemod&amp;cid={$mod->catID}&amp;uid={$mod->mid}'>" . GETLANG("delete") . "</a> ]<br>";				}				$this->moderationSubCats($navclass, $modclass, $navclass[$i]->catID, " +");			}		}		$this->output .= end_table();	}	/*************************************************************************	 *    Function used for recursion through subcats	 *************************************************************************/	function moderationSubCats($navclass, $modclass, $parent = 0, $prefix)	{		global $DB, $sid;		for ($i = 0; $i < count($navclass); $i++) {			if ($navclass[$i]->parentID == $parent) {				$this->output .= new_row();				$this->output .= "<div align='center'><input type='checkbox' name='cats[{$navclass[$i]->catID}]' value='{$navclass[$i]->catID}'></div>";				$this->output .= new_col();				$this->output .= $prefix . " " . $navclass[$i]->catName;				$this->output .= new_col();				foreach ($modclass as $mod) {					if ($mod->catID == $navclass[$i]->catID)						$this->output .= $mod->moderator . " [ <a href='admin.php?sid={$sid}&amp;area=users&amp;act=deletemod&amp;cid={$mod->catID}&amp;uid={$mod->mid}'>" . GETLANG("delete") . "</a> ]<br>";				}				$oldPrefix = $prefix;				$prefix .= " +";				$arrayIdx++;				$this->moderationSubCats($navclass, $modclass, $navclass[$i]->catID, $prefix);				$prefix = $oldPrefix;			}		}	}	function listCats($gid)	{		global $DB, $rwdInfo, $std;		$arrayIdx = 0;		if (!$rwdInfo->cats_saved) {			$DB->query("SELECT * FROM dl_categories");			if ($myrow = $DB->fetch_row($result)) {				do {					// Add category to cache					$rwdInfo->cat_cache[$myrow["cid"]] = $myrow;				} while ($myrow = $DB->fetch_row($result));			}			$rwdInfo->cats_saved = 1;		}		if (count($rwdInfo->cat_cache) <= 0)			return;		$this->output .= "<script>			function checkcol(theBox) 			{				xState=theBox.checked;				var frm = document.editgroup;								var str_part = '';								if (theBox.name == 'upload') { str_part = 'canUL' }				if (theBox.name == 'browse') { str_part = 'canBrowse' }				if (theBox.name == 'download') { str_part = 'canDL' }								for (var i = 0 ; i < frm.elements.length; i++)				{					var elm = frm.elements[i];										if ( elm.type == 'checkbox' )					{						var name = elm.name;						var instr = name.indexOf(str_part);						if (instr != -1)						{							elm.checked = xState;						}					}				}			}		</script>";		foreach ($rwdInfo->cat_cache as $cat) {			if ($cat->parentID == 0) {				$this->output .= new_row(-1, "normalrow");				$this->output .= $cat['name'];				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canDL[{$arrayIdx}]' value='1'";				if ($std->hasPerms($cat['canDL'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canBrowse[{$arrayIdx}]' value='1'";				if ($std->hasPerms($cat['canBrowse'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canUL[{$arrayIdx}]' value='1'";				if ($std->hasPerms($cat['canUL'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= "<input type='hidden' name='catID[$arrayIdx]' value='{$cat['cid']}'>";				$arrayIdx++;				$this->getSubCats($cat['catID'], $category, " +", $arrayIdx, $gid);			}		}		// Select All Checkboxes		$this->output .= new_row(-1, "normalrow");		$this->output .= "<b>" . GETLANG("selectall") . "</b>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='download' onClick='checkcol(this)' ></div>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='browse' onClick='checkcol(this)' ></div>";		$this->output .= new_col();		$this->output .= "<div align='center'><INPUT type='checkbox' name='upload' onClick='checkcol(this)' ></div>";	}	/*************************************************************************	 *    Function used for recursion through subcats	 *************************************************************************/	function getSubCats($parent = 0, $category = 0, $prefix, &$arrayIdx, $gid)	{		global $DB, $rwdInfo, $std;		if (!$parent)			return;		foreach ($rwdInfo->cat_cache as $cat) {			if ($cat["parentid"] == $parent) {				$this->output .= new_row(-1, "normalrow");				$this->output .= $prefix . " " . $cat->name;				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canDL[$arrayIdx]' value='1'";				if ($std->hasPerms($cat['canDL'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canBrowse[$arrayIdx]' value='1'";				if ($std->hasPerms($cat['canBrowse'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= new_col();				$this->output .= "<div align='center'><input type='checkbox' name='canUL[$arrayIdx]' value='1'";				if ($std->hasPerms($cat['canUL'], $gid))					$this->output .= " checked";				$this->output .= "></div>";				$this->output .= "<input type='hidden' name='catID[$arrayIdx]' value='{$cat['cid']}'>";				$oldPrefix = $prefix;				$prefix .= " +";				$arrayIdx++;				$std->getSubCats($cat['catID'], $category, $prefix);				$prefix = $oldPrefix;			}		}	}	function formatPerms($editMode, $string, $value)	{		$toks = explode("|", $string);		$num_toks = count($toks);		$found = false;		for ($i = 0; $i < $num_toks; $i++) {			if ($toks[$i] == $value) {				$found = true;				break;			}		}		if ($found == true) {			// We are adding			if ($editMode == 1)				return $string;			// Remove the value from the list			else {				for ($i = 0; $i < $num_toks; $i++) {					if ($toks[$i] != $value and $toks[$i])						$newstring .= $toks[$i] . "|";				}				return $newstring;			}		} else {			// We're adding			if ($editMode == 1) {				$string .= "|" . $value;				return $string;			} else				return $string;		}	}}?>