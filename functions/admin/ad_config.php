<?php/* * Copyright (c) 2023. * RW::Software * Dave Conley * https://www.rwscripts.com/ */$loader = new admin_config();class admin_config{	var $output = "";	var $last_id = -1;	var $BASE_HELP_URL = "http://www.rwscripts.com/docs/index.php?title=Admin_Control_Panel&printable=yes";	function admin_config()	{		global $IN, $OUTPUT;		switch ($IN["act"]) {			case 'general':				$this->config_gen();				break;			case 'security':				$this->config_security();				break;			case 'gallery':				$this->config_gallery();				break;			case 'date':				$this->config_date();				break;			case 'email':				$this->config_email();				break;			case 'phpinfo':				$this->config_phpinfo();				break;			case 'offline':				$this->config_offline();				break;			case 'resync':				$this->config_resyncCats();				break;			case 'updown':				$this->config_updown();				break;			case 'addnew':				$this->config_add_new_value();				break;		}		$OUTPUT->add_output($this->output);	}	function config_add_new_value()	{		global $DB, $IN, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_offline"));		if ($IN['posted']) {			$insert = array("key" => $IN['key'],				"default" => $IN['default_set'],				"value" => $IN['value'],				"type" => $IN['type'],				"options" => $IN['options'],				"caption" => $IN['caption'],				"act" => $IN['act_set'],				"sect_id" => $IN['sect_id'],				"full" => $IN['full'] ? 1 : 0);			$DB->insert($insert, "dl_config");			$this->output .= GETLANG("config_addednew") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=addnew'>" . GETLANG("backto") . " " . GETLANG("nav_config_addnew") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Added new config key {$IN['key']}");			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=addnew'>";		$this->output .= new_table(-1, "", "", "100%", "200");		$this->output .= "Setting Key";		$this->output .= new_col();		$this->output .= "<input type='text' name='key' style='width:100%' maxlen='254'>";		$this->output .= new_row();		$this->output .= "Default value";		$this->output .= new_col();		$this->output .= "<textarea name='default_set' style='width:100%'></textarea>";		$this->output .= new_row();		$this->output .= "Current value";		$this->output .= new_col();		$this->output .= "<textarea name='value' style='width:100%'></textarea>";		$this->output .= new_row();		$this->output .= "Input type";		$this->output .= new_col();		$this->output .= "<select name='type'>                                <option value='text'>Text Input</option>                                <option value='password'>Password</option>                                <option value='int'>Numbers Only</option>                                <option value='checkbox'>Checkbox</option>                                <option value='textarea'>Textarea</option>                                <option value='dropdown'>Dropdown</option>                                <option value='hidden'>Hidden</option></select>";		$this->output .= new_row();		$this->output .= "Options:<br>(If you are using a drop down as your type you can specify the available key/value options in this box. One per line in this format<br><i>key=>value</i>)";		$this->output .= new_col();		$this->output .= "<textarea name='default' style='width:100%'></textarea>";		$this->output .= new_row();		$this->output .= "Caption:";		$this->output .= new_col();		$this->output .= "<input type='text' name='caption' style='width:100%' maxlen='254'>";		$this->output .= new_row();		$this->output .= "Config section:";		$this->output .= new_col();		$this->output .= "<input type='text' name='act_set' style='width:100%' maxlen='63'>";		$this->output .= new_row();		$this->output .= "Section:";		$this->output .= new_col();		$this->output .= "<select name='sect_id'>";		$DB->query("SELECT secid, title FROM `dl_config_sections`");		while ($myrow = $DB->fetch_row()) {			$this->output .= "<option value='{$myrow['secid']}'>" . GETLANG($myrow['title']) . "</option>";		}		$this->output .= "</select>";		$this->output .= new_row();		$this->output .= "Only visible in full version?:";		$this->output .= new_col();		$this->output .= "<input type='checkbox' name='full'>";		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>          <input type='submit' name='submit' value='" . GETLANG("submit") . "'>           <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	// =========================================	// OK so for several years I've been trusting	// ini_set to do this for me only to find it	// lied to me and stabbed me in the back. I	// was such a trusting fool. WELL NO MORE! No	// longer will I be lured in by the sleeky curves	// of the newest function on the block. From	// now on if I want satisfaction I've got to	// give it to myself!... erm yeah this will	// write a .htaccess that will override any	// upload defaults	// ==========================================	function write_htaccess()	{		global $CONFIG, $std;		$htaccess_output = "";		$file = $CONFIG['overridetype'];		if ($file == "none")			return;		if ($file != "php.ini" and $file != ".htaccess") {			$std->error("Naughty naughty");			return;		}		// So you think you can just put a .htaccess file in the script root		// and get away with it do you? Fool.		if ($fp = @fopen(ROOT_PATH . "/$file", 'r')) {			// read through the file			while (!feof($fp)) {				// get a line from the file				$line = fgets($fp, 4096);				// if its one of the override elements then dont put it back - we'll add it later				// otherwise its something unrelated to the script to dont touch it				if (!stristr($line, "post_max_size") and !stristr($line, "upload_max_filesize"))					$htaccess_output .= $line;			}			@fclose($fp);		}		if ($fp = @fopen(ROOT_PATH . "/$file", 'w')) {			// Now we'll add our override elements			if ($file == "php.ini") {				$htaccess_output .= "\npost_max_size = " . $CONFIG['post_max_size'] . "\n";				$htaccess_output .= "upload_max_filesize = " . $CONFIG['ul_set'] . "\n";			} else {				$htaccess_output .= "\nphp_value post_max_size " . $CONFIG['post_max_size'] . "\n";				$htaccess_output .= "php_value upload_max_filesize " . $CONFIG['ul_set'] . "\n";				$htaccess_output .= "LimitRequestBody = 0";			}			// And relax			@fwrite($fp, $htaccess_output, strlen($htaccess_output));			@fclose($fp);		} else {			$std->error(GETLANG("er_htaccesswrite"));			return;		}	}	function config_offline()	{		global $CONFIG, $IN, $DB, $rwdInfo, $std, $sid;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_offline"));		if (!empty($IN["posted"])) {			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=offline'>" . GETLANG("backto") . " " . GETLANG("nav_offline") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Turned script offline");			return;		}		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=offline'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='offline' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>          <input type='submit' name='submit' value='" . GETLANG("submit") . "'>           <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_gen()	{		global $CONFIG, $IN, $DB, $rwdInfo, $std, $sid, $guser;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_genconfig"));		if (!empty($IN["posted"])) {			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=general'>" . GETLANG("backto") . " " . GETLANG("nav_genconfig") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Modified general configuration settings");			return;		}		$this->output .= GETLANG("config_gen") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=general' name='configform'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='general' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'> 		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_security()	{		global $CONFIG, $DB, $IN, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_security"));		if (!empty($IN["posted"])) {			$IN["session"] = intval($IN["session"]);			if ($IN["session"] < 2) {				$IN["session"] = 2;			}			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=security'>" . GETLANG("backto") . " " . GETLANG("nav_security") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Configured security settings");			return;		}		$this->output .= GETLANG("config_security") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=security'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='security' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'> 		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_updown()	{		global $CONFIG, $IN, $DB, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_updown"));		if (!empty($IN["posted"])) {			$this->write_htaccess();			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=updown'>" . GETLANG("backto") . " " . GETLANG("nav_updown") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Configured upload/download settings");			return;		}		$this->output .= GETLANG("config_updown") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=updown'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='updown' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'>		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_gallery()	{		global $CONFIG, $IN, $DB, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_gallery"));		if (!empty($IN["posted"])) {			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=gallery'>" . GETLANG("backto") . " " . GETLANG("nav_gallery") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Configured gallery settings");			return;		}		$this->output .= GETLANG("config_gallery") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=gallery'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='gallery' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'> 		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_date()	{		global $CONFIG, $IN, $DB, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_date"));		if (!empty($IN["posted"])) {			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=date'>" . GETLANG("backto") . " " . GETLANG("nav_date") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Configured time and date settings");			return;		}		$this->output .= GETLANG("config_date") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=date'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='date' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'> 		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_email()	{		global $CONFIG, $IN, $DB, $sid, $std;		$this->output .= admin_head(GETLANG("nav_config"), GETLANG("nav_email"));		if (!empty($IN["posted"])) {			if (empty($IN['email'])) {				$std->error(GETLANG("er_noemailout"));				return;			}			foreach ($IN['expecting'] as $i => $j) {				$update = array("value" => $IN[$i]);				$DB->update($update, "dl_config", "`key`='{$i}'");			}			$this->output .= GETLANG("config_updated") . "<br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=config&amp;act=email'>" . GETLANG("backto") . " " . GETLANG("nav_email") . "</a><br>";			$this->output .= "+ <a href='admin.php?sid=$sid&amp;area=main'>" . GETLANG("backto") . " " . GETLANG("nav_adhome") . "</a><br>";			$this->output .= admin_foot();			$std->addAdminLog("Configured email settings");			return;		}		$this->output .= GETLANG("config_email") . "<br>";		$this->output .= "<form method=POST action='admin.php?sid=$sid&amp;area=config&amp;act=email'>";		$this->output .= new_table();		$res = $DB->query("SELECT cfg.*, sec.* FROM `dl_config` cfg                    LEFT JOIN `dl_config_sections` sec ON (sec.secid=cfg.sect_id)                    WHERE cfg.act='email' ORDER BY cfg.sect_id ASC");		while ($myrow = $DB->fetch_row($res)) {			$this->displayOption($myrow);		}		$this->output .= end_table();		$this->output .= "<div align='center'><input type='hidden' name='posted' value='1'>		  <input type='submit' name='submit' value='" . GETLANG("submit") . "'> 		  <input type='reset' name='reset' value='" . GETLANG("reset") . "'></div>";		$this->output .= "</form>";		$this->output .= admin_foot();	}	function config_phpinfo()	{		phpinfo();	}	function config_resyncCats()	{		global $DB, $rwdInfo, $std;		$cats = $DB->query("SELECT * FROM dl_categories");		if ($myrow = $DB->fetch_row($cats)) {			do {				$std->resyncCats($myrow['cid']);			} while ($myrow = $DB->fetch_row($cats));		}		$std->info(GETLANG("catsresynced"));		$std->addAdminLog("Resynchronised categories");	}	function displayOption($row)	{		global $std;		if (!$std->isUsingFullVersion()) {			if ($row['full'])				return;		}		if ($this->last_id != $row['sect_id']) {			$this->displaySectionHeading($row);		}		$this->last_id = $row['sect_id'];		switch ($row['type']) {			case "text":			case "password":				$this->displayBasicInput($row);				break;			case "int":				$this->displayIntInput($row);				break;			case "checkbox":				$this->displayCheckbox($row);				break;			case "textarea":				$this->displayTextArea($row);				break;			case "dropdown":				$this->displayDropDown($row);				break;			case "special":				$this->displaySpecialOption($row);				break;			default:				$this->displayNonFunctional($row);				break;		}	}	function displaySectionHeading($row)	{		$this->output .= new_row(4, "acptablesubhead");		$this->output .= GETLANG($row['title']);		if ($row['desc']) {			$this->output .= new_row(4);			$this->output .= GETLANG($row['desc']);		}	}	function displayBasicInput($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class, "", 300);		$this->output .= GETLANG($row['caption']);		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "<input type='{$row['type']}' id='{$row['key']}' name='{$row['key']}' value='{$row['value']}' style='width:100%'>";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:revert(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displayIntInput($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class, "", 300);		$this->output .= GETLANG($row['caption']);		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "<input type='text' name='{$row['key']}' value='{$row['value']}' style='width:20%'>";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:revert(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displayCheckbox($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class, "", 300);		$this->output .= GETLANG($row['caption']);		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "<input type='{$row['type']}' value='1' name='{$row['key']}' ";		if ($row['value'])			$this->output .= "checked";		$this->output .= ">";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:revert(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displayTextArea($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class);		$this->output .= GETLANG($row['caption']);		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "<textarea name='{$row['key']}' rows='5' cols='50' style='width:100%'>{$row['value']}</textarea>";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:revert(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displayDropDown($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class);		$this->output .= ($row['caption']) ? GETLANG($row['caption']) . ":" : "";		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "<select id='{$row['key']}' name='{$row['key']}'>";		$options = explode("\n", $row['options']);		foreach ($options as $o) {			$keyvalue = explode("=>", $o);			$this->output .= "<option value='{$keyvalue[1]}'";			if (trim($keyvalue[1]) == $row['value'])				$this->output .= " selected";			$this->output .= ">" . GETLANG($keyvalue[0]) . "</option>";		}		$this->output .= "</select>";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:setSelectToValue(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displaySpecialOption($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class);		$this->output .= ($row['caption']) ? GETLANG($row['caption']) . ":" : "";		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= $this->$row['key']($row);		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:setSelectToValue(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='Revert to default'></a>";		$this->output .= "<input type='hidden' name='expecting[{$row['key']}]' value='1'>";	}	function displayNonFunctional($row)	{		$class = "normalrow";		if ($row['value'] != $row['default'])			$class = "modifiedrow";		$this->output .= new_row(-1, $class);		$this->output .= GETLANG($row['caption']) . ":";		$this->output .= new_col(-1, "", 16);		$this->output .= "<a href='javascript:helpwindow(\"{$this->BASE_HELP_URL}#{$row['key']}\")'><img src='skins/admin/images/help.gif' border='0' alt='help'></a>";		$this->output .= new_col();		$this->output .= "Will at some point have a input area of type {$row['type']} here";		$this->output .= new_col(-1, "", 16);		if ($row['value'] != $row['default'])			$this->output .= "<a href='javascript:revert(\"{$row['key']}\",\"{$row['default']}\")'><img src='skins/admin/images/revert.gif' border='0' alt='revert'></a>";	}	// Special config options	function defaultSkin($row)	{		global $std;		return $std->skinListBox($row['value'], "", $row['key']);	}	function defaultLang($row)	{		global $std;		return $std->langListBox($row['value'], $row['key'], true);	}	function approvedgroup($row)	{		global $guser;		return $guser->groupBox($row['value'], "hilite", false, $row['key']);	}}?>