<?php/* * Copyright (c) 2023. * RW::Software * Dave Conley * https://www.rwscripts.com/ */class admin_plugins{	var $output;	function admin_plugins()	{		global $IN, $OUTPUT;		switch ($IN["act"]) {			case 'config':			{				$this->showPlugins();				break;			}			case 'uninstall':			{				$this->uninstallPlugin();				break;			}			case 'toggle':			{				$this->toggleEnabled();				break;			}		}		$OUTPUT->add_output($this->output);	}	function showPlugins()	{		global $modloader, $rwdInfo, $sid;		$this->output .= admin_head(GETLANG("nav_plugins"), GETLANG("nav_config"));		$this->output .= new_table(-1, "", "", "100%", "200");		require_once(ROOT_PATH . "/engine/xml.php");		foreach ($modloader->installed as $mod) {			$xml = 0;			if (is_file(ROOT_PATH . "/modules/{$mod['modname']}/module_info.xml")) {				$xml = new CXMLUtils();				$xml->parseFile(ROOT_PATH . "/modules/{$mod['modname']}/module_info.xml");			}			$this->output .= new_row(2, "acptablesubhead");			if ($xml) {				$sqldata = $xml->GetDataFromTag("info");				$this->output .= $sqldata['Attributes']['name'];			} else				$this->output .= $mod['modname'];			$this->output .= new_col();			$this->output .= "<div align='right'>            <a href='admin.php?sid=$sid&area=plugins&act=uninstall&name={$mod['modname']}'>" . GETLANG("uninstall") . "</a> |             <a href='admin.php?sid=$sid&area=plugins&act=toggle&name={$mod['modname']}'>" . (($mod['enabled']) ? "Disable" : "Enable") . "</a></div>";			$this->output .= new_row(-1, "normalrow", "", "33%");			$this->output .= "<b>Module files:</b><br>";			$filelist = $this->getModuleFileList($mod['modname']);			foreach ($filelist as $file) {				$this->output .= $file . "<br>";			}			$this->output .= new_col(1, "", "33%");			$this->output .= "<b>Extra Required files:</b><br>";			if ($xml) {				$filelist = $this->getExternalFilesFromXML($xml);				foreach ($filelist as $file) {					$this->output .= $file . "<br>";				}			} else {				$this->output .= "<i>module_info.xml missing. Unable to determine extra files</i>";			}			$this->output .= new_col(1, "", "34%");			if ($xml) {				$this->output .= $this->getExtraInfo($xml);			} else {				$this->output .= "<i>module_info.xml missing. Unable to determine extra infomation</i>";			}		}		$this->output .= end_table();		$this->output .= admin_foot();	}	function uninstallPlugin()	{		global $IN, $DB, $std;		$name = $IN['name'];		require_once(ROOT_PATH . "/engine/xml.php");		$xml = 0;		if (is_file(ROOT_PATH . "/modules/{$name}/module_info.xml")) {			$xml = new CXMLUtils();			$xml->parseFile(ROOT_PATH . "/modules/{$name}/module_info.xml");		}		$sqldata = $xml->GetChildElementsFromTag("sql");		foreach ($sqldata['children'] as $table) {			$DB->query("DROP TABLE `{$name}`");		}		$files = $this->getExternalFilesFromXML($xml);		foreach ($files as $file) {			unlink(ROOT_PATH . "/{$file}");		}		$std->rmdirr(ROOT_PATH . "/modules/{$name}/");    // Remove plugin directory.	}	function toggleEnabled()	{		global $DB, $IN, $std, $modloader;		$enable = 1;		$module = $modloader->installed[$IN['name']];		if ($module['enabled']) $enable = 0;		$DB->query("UPDATE `dl_plugins` SET `enabled`='{$enable}' WHERE `modname`='{$IN['name']}'");		if ($enable) $std->info(GETLANG("plugin_enabled")); else			$std->info(GETLANG("plugin_disabled"));	}	/*******************************	 * @desc utility functions	 */	function getModuleFileList($name, $filelist = array())	{		$dir_handle = @opendir(ROOT_PATH . "/modules/{$name}/") or die(ROOT_PATH . "/modules/{$name}/");		while ($filename = readdir($dir_handle)) {			if (($filename != ".") and ($filename != "..") and ($filename != ".svn")) {				if (is_dir(ROOT_PATH . "/modules/{$name}/{$filename}")) {					$this->getModuleFileList("{$name}/{$filename}", &$filelist);				}				$filelist[] = $name . "/" . $filename;			}		}		return $filelist;	}	function getExternalFilesFromXML($xml)	{		$filelist = array();		$files = $xml->GetChildElementsFromTag("files");		if (!empty($files)) {			foreach ($files['children'] as $file) {				$filelist[] = $file['Attributes']['name'];			}		} else {			$filelist[] = GETLANG("none");		}		return $filelist;	}	function getExtraInfo($xml)	{		$data = $xml->GetDataFromTag("info");		$info = $data['Attributes'];		$result = "<b>Name:</b> {$info['name']}<br>                   <b>Author:</b> {$info['author']}<br>                   <b>Author Website:</b> <a href='{$info['website']}' target='_blank'>{$info['website']}</a><br>                   <b>Version:</b> {$info['version']}<br><br>                   <b>Description:</b> {$info['description']}";		return $result;	}}$loader = new admin_plugins();?>