<?php/* * Copyright (c) 2023. * RW::Software * Dave Conley * https://www.rwscripts.com/ */class module_plugs{	/*********************************************	 * @desc array modify plugin hook	 * This function takes in an array and passes it	 * into the plugins. It will return the same	 * array with any modifications applied by the	 * plugins. 2nd parameter is name of the plugin	 * function to call.	 */	function arrayModifyHook($data = array(), $fname = "")	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->modbase && is_callable(array($mod->modbase, $fname))) {					$data = $mod->modbase->$fname($data);				}			}		}		return $data;	}	function assignLinkActions($data = array())	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->modbase && is_callable(array($mod->modbase, "assignLinkActions"))) {					$data = $mod->modbase->assignLinkActions($data);				}			}		}		return $data;	}	function files_dlMainForm($data = array())	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_files && is_callable(array($mod->mod_files, "files_dlMainForm"))) {					$data = $mod->mod_files->files_dlMainForm($data);				}			}		}		return $data;	}	function appendFilesDatabaseEntry($data = array())	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_files && is_callable(array($mod->mod_files, "appendFilesDatabaseEntry"))) {					$data = $mod->mod_files->appendFilesDatabaseEntry($data);				}			}		}		return $data;	}	function ucp_modulenav()	{		global $rwdInfo, $modloader;		$data = "";		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_usercp && is_callable(array($mod->mod_usercp, "ucp_modulenav"))) {					$data = $mod->mod_usercp->ucp_modulenav($data);				}			}		}		return $data;	}	/*************************************************	 * @desc modfiles plugin hooks	 */	function parse_file_data($myrow = array(), $data = array(), $isFullList = 1)	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_files && is_callable(array($mod->mod_files, "parse_file_data"))) {					$data = $mod->mod_files->parse_file_data($myrow, $data, $isFullList);				}			}		}		return $data;	}	function files_listAllLeftJoins($catID)	{		global $rwdInfo, $modloader;		$data = "";		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_files && is_callable(array($mod->mod_files, "files_listAllLeftJoins"))) {					$data = $mod->mod_files->files_listAllLeftJoins($catID, $data);				}			}		}		return $data;	}	function files_showFileSQL($sql = array(), $symid)	{		global $rwdInfo, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_files && is_callable(array($mod->mod_files, "files_showFileSQL"))) {					$sql = $mod->mod_files->files_showFileSQL($sql, $symid);				}			}		}		return $sql;	}	function ucp_moduleprofile($update = array())	{		global $rwdInfo, $modloader;		$data = "";		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_usercp && is_callable(array($mod->mod_usercp, "ucp_moduleprofile"))) {					$data .= $mod->mod_usercp->ucp_moduleprofile($data, &$update);				}			}		}		return $data;	}	/************************************	 * @desc Probably the one and only html function we'll need	 */	function html_skincall($fn_name, $html, $keys = array())	{		global $rwdInfo, $std, $modloader;		$data = "";		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_html) {					if (is_callable(array($mod->mod_html, $fn_name))) {						$mod->mod_html->$fn_name($html, &$keys);					}				}			}		}		if (is_object($html)) {			return $html->$fn_name($keys);		} else {			$std->warning("\$html is not an object so cannot call {$fn_name}");		}	}	/************************************	 * @desc Allows addition of custom tags in the global skin tempalte	 */	function html_globalskincall($inhtml)	{		global $rwdInfo, $std, $modloader;		if (!empty($modloader->moddata)) {			foreach ($modloader->moddata as $mod) {				if ($mod->mod_html) {					if (is_callable(array($mod->mod_html, "html_globalskincall"))) {						$inhtml = $mod->mod_html->html_globalskincall($inhtml);					}				}			}		}		return $inhtml;	}}?>